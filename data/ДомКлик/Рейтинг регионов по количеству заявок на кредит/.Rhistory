library(tidyverse)
# построим график рассеивания
ggplot(data = db, aes(x = Age, y = resid)) +
geom_point()
View(db)
# построим график рассеивания
ggplot(data = db, aes(x = Age, y = resd)) +
geom_point()
db <- read_excel('DB.xlsx')
# добавим новый столбец с остатками
db$resid <- mod$residuals
# построим график рассеивания
ggplot(data = db, aes(x = Age, y = resid)) +
geom_point()
table(db$Gender, db$Work)
# кол. частот достаточно, что бы пременит тест хиквадрат
chisq.test(db$Gender, db$Work)
library(tidyverse)
beer <- read.csv('Consumo_cerveja.csv')
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
summary(mod_beer)
beer$month <- strsplit(beer$Data, '-')[2]
beer$month <- strsplit(beer$Data, '-')
View(beer)
beer$month <- strsplit(beer$Data, '-')[2]
beer$month <- strsplit(beer$Data, '-')[2][1]
beer$month <- strsplit(beer$Data, '-') %>% beer$month
beer$month <- strsplit(beer$Data, '-') %>% beer$month[2]
beer <- read.csv('Consumo_cerveja.csv')
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
beer$Month <- (strsplit(beer$Data, '-'))[2]
beer$Month <- (strsplit(beer$Data, '-'))[[1]][2]
beer <- read.csv('Consumo_cerveja.csv')
beer$Month <- beer %>% (strsplit(Data, '-'))[[1]][2]
beer$Month <- beer %>% (strsplit(beer$Data, '-'))[[1]][2]
beer$Month <- beer %>% unlist(strsplit(beer$Data, '-'))[2]
beer$Month <- beer %>% unlist(strsplit(beer$Data, '-'))
beer <- beer[-complete.cases(beer), ]
beer <- beer[, -complete.cases(beer)]
beer <- beer[, complete.cases(beer)]
beer <- beer[complete.cases(beer), ]
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
summary(mod_beer)
beer$Month <- unlist(strsplit(beer$Data, '-'))[2]
beer$Month <- strsplit(beer$Data, '-')[[1]][2]
beer <- read.csv('Consumo_cerveja.csv')
beer <- beer[complete.cases(beer), ]
beer$Month <- strsplit(beer$Data, '-')[[1]][2]
beer <- read.csv('Consumo_cerveja.csv')
beer <- beer[complete.cases(beer), ]
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
beer %>% mutate(Month = strsplit(Data, '-')[[1]][2])
beer %>% mutate(Month = strsplit(Data, '-'))
beer %>% mutate(Month = strsplit(Data, '-'))
beer %>% mutate(Month = strsplit(Data, '-')[1])
beer %>% mutate(Month = strsplit(Data, '-')[[1]])
beer <- beer %>% mutate(Month = strsplit(Data, '-'))
beer <- beer %>% mutate(Month = unlist(strsplit(Data, '-')))
beer <- beer %>% mutate(Month = unlist(strsplit(Data, '-')[[1]]))
beer <- beer %>% mutate(Month = strsplit(Data, '-')[1][2])
beer <- beer %>% mutate(Month = strsplit(Data, '-')[2][2])
beer <- beer %>% mutate(Month = strsplit(Data, '-')[1])
beer <- beer %>% mutate(Month = strsplit(Data, '-'))
beer <- beer %>% mutate(Month = strsplit(Data, '-')) %>% Month[2]
beer <- beer %>% mutate(Month = strsplit(Data, '-')) %>% beer$Month[2]
beer <- beer %>% mutate(Month = strsplit(Data, '-')) %>% beer$Month
str(beer)
beer <- beer %>% mutate(Month = Month[2])
beer <- beer %>% mutate(Month = strsplit(Data, '-'))
beer$Month <- beer$Month[2]
beer <- read.csv('Consumo_cerveja.csv')
beer <- beer[complete.cases(beer), ]
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
Month <- strsplit(beer$Data, '-')
View(Month)
Month[2]
Month[2][2]
Month[[2]][2]
Month <- strsplit(beer$Data, '-')[[2]][2]
Month_list <- strsplit(beer$Data, '-')
for (i in Month_list) {
Month <- c(Month, i[2])
}
beer$Month <- Month
Month_list <- strsplit(beer$Data, '-')
Month <- c()
for (i in Month_list) {
Month <- c(Month, i[2])
}
beer$Month <- Month
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
summary(mod_beer)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
library(tidyverse)
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, Month)
View(small_beer)
library(psych)
corr.test(small_beer)
cor(small_beer)
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, as.integer(Month))
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, Month)
mod_beer_1 <- as.factor(beer$Month)
beer$Month <- as.factor(beer$Month)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
beer$Month <- as.integer(beer$Month)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
beer$Month <- as.factor(beer$Month)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, Month)
cor(small_beer)
small_beer$Month <- as.integer(small_beer$Month)
View(small_beer)
cor(small_beer)
corr.test(small_beer)
cor(small_beer)
small_beer$resid <- mod_beer_1$residuals
small_beer$fitt <- mod_beer_1$fitted.values
ggplot(data = small_beer, aes(x = resid, y = fitt)) +
geom_point() +
geom_line(y = 0, color = 'red')
ggplot(data = small_beer, aes(x = resid, y = fitt)) +
geom_point() +
geom_line(yintercept = 0, color = 'red')
ggplot(data = small_beer, aes(x = resid, y = fitt)) +
geom_point() +
geom_line(y = 0, color = 'red')
ggplot(data = small_beer, aes(x = fitt, y = resid)) +
geom_point() +
geom_line(y = 0, color = 'red')
library(lmtest)
library(sandwich)
coeftest(mod_beer_1, vcov = vcovHC(mod2, type = "HC0"))
coeftest(mod_beer_1, vcov = vcovHC(mod_beer_1, type = "HC0"))
plot(mod_beer_1, 5)
diabet <- read.csv('diabetes.csv')
View(diabet)
summary(diabet)
boxplot(diabet)
box_plot <- boxplot(diabet)
box_plot$out
box_plot <- boxplot(diabet)
box_plot <- boxplot(diabet$BMI)
box_plot$out
box_plot$stats
diabet$BMI
BMI <- diabet$BMI
boxplot(BMI)
boxplot(diabet$BMI)
boxplot(diabet)
summary(diabet)
diabet <- diabet %>% filter(BloodPressure != 0, BMI != 0)
library(tidyverse)
diabet <- diabet %>% filter(BloodPressure != 0, BMI != 0)
summary(diabet)
table(diabet$Outcome)
mod_d <- glm(data = diabet, Outcome ~ Glucose + BloodPressure + Insulin + BMI + AGE, family = "binomial")
mod_d <- glm(data = diabet, Outcome ~ Glucose + BloodPressure + Insulin + BMI + Age, family = "binomial")
summary(mod_d)
exp(coef(mod_d))
summary(mod_d)
exp(coef(mod_d))
mod_d$fitted.values
diabet <- diabet %>% mutate(fitt = ifelse(mod_d$fitted.values > 0.5, 1, 0))
TN <- diabet[diabet$Outcome == 0 & diabet$fitt == 0, ]
View(TN)
TN <- nrow(diabet[diabet$Outcome == 0 & diabet$fitt == 0, ])
TP <- nrow(diabet[diabet$Outcome == 1 & diabet$fitt == 1, ])
FN <- nrow(diabet[diabet$Outcome == 1 & diabet$fitt == 0, ])
FP <- nrow(diabet[diabet$Outcome == 0 & diabet$fitt == 1, ])
sensitivity <- TP / (TP + FN)
specificity <- TN / (TN + FP)
accuracy <- (TP + TN) / nrow(diabet)
View(diamonds)
library(tidyverse)
View(diamonds)
?barplot
shiny::runApp('C:/Users/yadon/Skillbox/R/19. Аналитические панели в R. Фреймворк Shiny/practice2')
runApp('C:/Users/yadon/Skillbox/R/19. Аналитические панели в R. Фреймворк Shiny/practice2')
runApp('C:/Users/yadon/Skillbox/R/19. Аналитические панели в R. Фреймворк Shiny/practice2')
?read.csv()
library(tidyverse)
library(readxl)
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data/СберИндекс')
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
cash_of <- cash_of %>% separate(cash_of, col = 'Дата', into = c('Год','Месяц'), sep = '-') %>%
as.integer(c(Год, Месяц))
cash_of <- separate(cash_of, col = 'Дата', into = c('Год','Месяц'), sep = '-')
cash_of$Год <- as.integer(с(cash_of$Год, cash_of$Месяц))
cash_of$Год <- as.integer(cash_of$Год, cash_of$Месяц)
str(cash_of)
cash_of$Месяц <- as.integer(cash_of$Месяц)
str(cash_of)
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
index <- read_excel('Индекс потребительской активности.xlsx')
index$Дата <- as.character(index$Дата)
turist <- read.csv('Количество внутренних туристов.csv', sep = ';')
cash_of <- separate(cash_of, col = 'Дата', into = c('Год','Месяц'), sep = '-')
cash_of$Год <- as.integer(cash_of$Год)
cash_of$Месяц <- as.integer(cash_of$Месяц)
index <- separate(index, col = 'Дата', into = c('Год','Месяц'), sep = '-')
index$Год <- as.integer(index$Год)
index$Месяц <- as.integer(index$Месяц)
turist <- separate(turist, col = 'Дата', into = c('Год','Месяц'), sep = '-')
turist$Год <- as.integer(turist$Год)
turist$Месяц <- as.integer(turist$Месяц)
month_data <- function(data) {
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
month_str <- c()
for (i in data) {
month_str <- c(month_str, month_v[as.integer(i)])
}
month_f <- factor(month_str, levels = month_v)
return(month_f)
}
cash_of$Месяц <- month_data(cash_of$Месяц)
index$Месяц <- month_data(index$Месяц)
turist$Месяц <- month_data(turist$Месяц)
cash_of <- cash_of[cash_of$Год == 2020, ]
index <- index[index$Год == 2020, ]
turist <- turist[turist$Год == 2020, ]
cash_of <- cash_of %>% group_by(Регион, Год, Месяц) %>% summarise(`Индекс.БП` = median(Значение))
index$Значение <- as.numeric(index$Значение)
index <- index %>% group_by(Регион, Год, Месяц) %>% summarise(`Индекс.ПА` = median(Значение))
turist <- turist %>% group_by(Регион, Год, Месяц) %>% summarise(`Количество.ВТ` = median(Значение))
sum(!complete.cases(cash_of))
sum(!complete.cases(index))
sum(!complete.cases(turist))
df_cash_and_index <- full_join(cash_of, index, by = c('Регион', 'Год', 'Месяц'))
df_sberIndex <- full_join(df_cash_and_index, turist, by = c('Регион', 'Год', 'Месяц'))
View(df_sberIndex[!complete.cases(df_sberIndex), ])
df_rus <- df_sberIndex[df_sberIndex$Регион == 'Россия', ]
df_sberIndex <- df_sberIndex %>% mutate(Индекс.БП = ifelse(is.na(Индекс.БП), df_rus$Индекс.БП, Индекс.БП))
df_sberIndex <- df_sberIndex %>% mutate(Индекс.ПА = ifelse(is.na(Индекс.ПА), df_rus$Индекс.ПА, Индекс.ПА))
df_sberIndex <- df_sberIndex %>% mutate(Количество.ВТ = ifelse(is.na(Количество.ВТ), df_rus$Количество.ВТ, Количество.ВТ))
df_sberIndex <- df_sberIndex[df_sberIndex$Регион != 'Россия', ]
df_sberIndex$Регион[df_sberIndex$Регион == 'Алтай'] <- 'Республика Алтай'
df_sberIndex$Регион[df_sberIndex$Регион == 'Адыгея'] <- 'Республика Адыгея'
View(df_sberIndex)
# ДомКлик
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data/ДомКлик/Рейтинг регионов по количеству заявок на кредит/')
bind_rows
df_full <- bind_rows(list_df)
df <- list.files('C:/Users/yadon/Skillbox/R/TrustUs_R/data/ДомКлик/Рейтинг регионов по количеству заявок на кредит') %>%
lapply(read_excel) %>%
mutate('Месяц' = factor(labels = c("Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"))) %>%
bind_rows
load_xlsx <- function(name_file, name_month) {
res <- read_excel(paste(path_, name_file, sep = ''))
res <- res %>% mutate(`Месяц` = name_month)
return(res)
}
august <- load_xlsx('август 2020.xlsx', 'август')
path_ <- 'C:/Users/yadon/Skillbox/R/TrustUs_R/data/ДомКлик/Рейтинг регионов по количеству заявок на кредит/'
august <- load_xlsx('август 2020.xlsx', 'август')
View(august)
april <- load_xlsx('апрель 2020.xlsx', 'апрель')
december <- load_xlsx('декабрь 2020.xlsx', 'декабрь')
juli <- load_xlsx('июль 2020.xlsx', 'июль')
july <- load_xlsx('июль 2020.xlsx', 'июль')
june <- load_xlsx('июнь 2020.xlsx', 'июнь')
may <- load_xlsx('май 2020.xlsx', 'май')
may <- load_xlsx('май 2020.xlsx', 'май')
may <- load_xlsx('май 2020.xlsx', 'май')
may <- load_xlsx('май 2020.xlsx', 'май')
View(may)
march <- load_xlsx('март 2020.xlsx', 'март')
november <- load_xlsx('ноябрь 2020.xlsx', 'ноябрь')
october <- load_xlsx('октябрь 2020.xlsx', 'октябрь')
september <- load_xlsx('сентябрь 2020.xlsx', 'сентябрь')
february <- load_xlsx('февраль 2020.xlsx', 'февраль')
january <- load_xlsx('январь 2020.xlsx', 'январь')
list_df <- list(august, april, december, july, june, may, march, november, october, september, february, january)
df_domclick <- bind_rows(list_df)
View(df_domclick)
View(april)
df_domclick <- bind_rows(august, april, december, july, june, may, march, november, october, september, february, january)
View(df_domclick)
unique(df_domclick$Регион)
unique(sort(df_domclick$Регион))
View(df_domclick)
load_xlsx <- function(name_file, name_month) {
res <- read_excel(paste(path_, name_file, sep = ''))
res <- res %>% mutate(`Год` = 2020, `Месяц` = name_month)
return(res)
}
august <- load_xlsx('август 2020.xlsx', 'август')
View(august)
april <- load_xlsx('апрель 2020.xlsx', 'апрель')
december <- load_xlsx('декабрь 2020.xlsx', 'декабрь')
july <- load_xlsx('июль 2020.xlsx', 'июль')
june <- load_xlsx('июнь 2020.xlsx', 'июнь')
may <- load_xlsx('май 2020.xlsx', 'май')
march <- load_xlsx('март 2020.xlsx', 'март')
november <- load_xlsx('ноябрь 2020.xlsx', 'ноябрь')
october <- load_xlsx('октябрь 2020.xlsx', 'октябрь')
september <- load_xlsx('сентябрь 2020.xlsx', 'сентябрь')
february <- load_xlsx('февраль 2020.xlsx', 'февраль')
january <- load_xlsx('январь 2020.xlsx', 'январь')
df_domclick <- bind_rows(august, april, december, july, june, may, march, november, october, september, february, january)
df_domclick <- df_domclick %>% select('Регион', 'Месяц')
View(df_domclick)
df_domclick <- bind_rows(august, april, december, july, june, may, march, november, october, september, february, january)
View(df_domclick)
df_domclick <- df_domclick %>% select('Регион', 'Месяц', 'Год', 'Всего одобренных заявок', 'Доля онлайн-заявок', 'Доля заявок в офисе банка')
View(complete.cases(df_domclick))
sum(complete.cases(df_domclick))
df_err <- df_domclick[!complete.cases(df_domclick), ]
View(df_err)
df_domclick <- df_domclick[complete.cases(df_domclick), ]
sum(complete.cases(df_domclick))
sum(!complete.cases(df_domclick))
df_domclick <- bind_rows(august, april, december, july, june, may, march, november, october, september, february, january)
df_domclick <- df_domclick %>% select('Регион', 'Месяц', 'Год', 'Всего одобренных заявок', 'Доля онлайн-заявок', 'Доля заявок в офисе банка')
sum(!complete.cases(df_domclick))
df_domclick <- df_domclick[complete.cases(df_domclick), ]
month_data <- function(data) {
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
month_str <- c()
for (i in data) {
month_str <- c(month_str, month_v[as.integer(i)])
}
month_f <- factor(month_str, levels = month_v)
return(month_f)
}
View(month_data)
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
df_domclick$Месяц <- as.factor(df_domclick$Месяц, levels = month_v)
df_domclick$Месяц <- factor(df_domclick$Месяц, levels = month_v)
str(df_domclick)
no_procent <- function(data) {
data <- gsub('%', '', data)
data <- as.numeric(data)
return(data())
}
df_domclick$`Доля онлайн-заявок` <- no_procent(df_domclick$`Доля онлайн-заявок`)
v <- no_procent(df_domclick$`Доля онлайн-заявок`)
View(v)
View(v)
print(v)
v <- df_domclick$`Доля онлайн-заявок`
df_domclick$`Доля онлайн-заявок` <- no_procent(v)
no_procent <- function(data) {
print(data())
data <- gsub('%', '', data)
data <- as.numeric(data)
return(data())
}
df_domclick$`Доля онлайн-заявок` <- no_procent(v)
no_procent <- function(data) {
data <- gsub('%', '', data)
print(data())
data <- as.numeric(data)
return(data())
}
v <- df_domclick$`Доля онлайн-заявок`
df_domclick$`Доля онлайн-заявок` <- no_procent(v)
no_procent <- function(data) {
data <- gsub('%', '', data)
return(data())
}
v <- df_domclick$`Доля онлайн-заявок`
print(v)
View(df_domclick)
df_domclick$`Всего одобренных заявок` <- ifelse(df_domclick$`Всего одобренных заявок` == '-', NA, df_domclick$`Всего одобренных заявок`)
df_domclick$`Всего одобренных заявок` <- ifelse(df_domclick$`Всего одобренных заявок` == '—', NA, df_domclick$`Всего одобренных заявок`)
v <- df_domclick$`Доля онлайн-заявок`
print(v)
df_domclick$`Доля онлайн-заявок` <- no_procent(v)
no_procent <- function(data) {
if (data == '—') {
data = NA
} else data = data
data <- gsub('%', '', data)
data <- as.numeric(data)
return(data())
}
v <- df_domclick$`Доля онлайн-заявок`
df_domclick$`Доля онлайн-заявок` <- no_procent(v)
v <- df_domclick$`Доля онлайн-заявок`
df_domclick$`Доля онлайн-заявок` <- no_procent(v)
no_procent <- function(data) {
ifelse(data == '—', NA, data)
data <- gsub('%', '', data)
data <- as.numeric(data)
return(data())
}
df_domclick$`Доля онлайн-заявок` <- no_procent(v)
no_procent <- function(data) {
if (data == '—') {
data = NA
} else {
data = data
}
data <- gsub('%', '', data)
data <- as.numeric(data)
return(data())
}
v <- df_domclick$`Доля онлайн-заявок`
print(v)
df_domclick$`Доля онлайн-заявок` <- no_procent(v)
v <- df_domclick$`Всего одобренных заявок`
print(v)
df_domclick$`Всего одобренных заявок` <- no_procent(v)
no_procent <- function(data) {
data <- gsub('%', '', data)
data <- as.numeric(data)
return(data())
}
df_domclick$`Всего одобренных заявок` <- no_procent(v)
df_domclick$`Всего одобренных заявок` <- no_procent(v)
no_procent <- function(data) {
data <- fill(data, .direction = 'down')
data <- gsub('%', '', data)
data <- as.numeric(data)
return(data())
}
df_domclick$`Всего одобренных заявок` <- no_procent(v)
df_domclick <- df_domclick %>% fill(`Всего одобренных заявок`, .direction = 'down')
v <- df_domclick$`Всего одобренных заявок`
print(v)
df_domclick$`Всего одобренных заявок` <- no_procent(v)
df_domclick$`Доля онлайн-заявок` <- ifelse(df_domclick$`Доля онлайн-заявок` == '—', NA, df_domclick$`Доля онлайн-заявок`)
df_domclick$`Доля онлайн-заявок` <- no_procent(df_domclick$`Доля онлайн-заявок`)
no_procent <- function(data) {
data <- gsub('%', '', data)
data <- as.numeric(data)
return(data())
}
df_domclick$`Доля онлайн-заявок` <- no_procent(df_domclick$`Доля онлайн-заявок`)
df_domclick <- df_domclick %>% fill(`Доля онлайн-заявок`, .direction = 'down')
df_domclick$`Доля заявок в офисе банка` <- ifelse(df_domclick$`Доля заявок в офисе банка` == '—', NA, df_domclick$`Доля заявок в офисе банка`)
df_domclick$`Доля заявок в офисе банка` <- no_procent(df_domclick$`Доля заявок в офисе банка`)
df_domclick$`Доля заявок в офисе банка` <- ifelse(df_domclick$`Доля заявок в офисе банка` == '—', NA, df_domclick$`Доля заявок в офисе банка`)
df_domclick$`Доля заявок в офисе банка` <- no_procent(df_domclick$`Доля заявок в офисе банка`)
df_domclick <- df_domclick %>% fill(`Доля заявок в офисе банка`, .direction = 'down')
df_domclick$`Доля заявок в офисе банка` <- no_procent(df_domclick$`Доля заявок в офисе банка`)
df_domclick$`Всего одобренных заявок` <- no_procent(df_domclick$`Всего одобренных заявок`)
df_domclick <- df_domclick %>% fill(`Всего одобренных заявок`, .direction = 'down')
df_domclick <- df_domclick %>% fill(`Доля онлайн-заявок`, .direction = 'down')
df_domclick <- df_domclick %>% fill(`Доля заявок в офисе банка`, .direction = 'down')
df_domclick$`Всего одобренных заявок` <- no_procent(df_domclick$`Всего одобренных заявок`)
v <- df_domclick$`Всего одобренных заявок`
df_domclick$`Всего одобренных заявок` <- no_procent(v)
df_domclick$`Доля онлайн-заявок` <- no_procent(df_domclick$`Доля онлайн-заявок`)
v <- df_domclick$`Доля онлайн-заявок`
df_domclick$`Доля онлайн-заявок` <- no_procent(v)
no_procent <- function(data_) {
data_ <- gsub('%', '', data_)
data_ <- as.numeric(data_)
return(data())
}
v <- df_domclick$`Доля онлайн-заявок`
df_domclick$`Доля онлайн-заявок` <- no_procent(v)
df_domclick$`Доля онлайн-заявок` <- gsub('%', '', df_domclick$`Доля онлайн-заявок`)
df_domclick$`Доля заявок в офисе банка` <- as.numeric(gsub('%', '', df_domclick$`Доля заявок в офисе банка`))
df_domclick$`Доля онлайн-заявок` <- as.numeric(gsub('%', '', df_domclick$`Доля онлайн-заявок`))
df_domclick <- bind_rows(august, april, december, july, june, may, march, november, october, september, february, january)
df_domclick <- df_domclick %>% select('Регион', 'Месяц', 'Год', 'Всего одобренных заявок', 'Доля онлайн-заявок', 'Доля заявок в офисе банка')
df_domclick <- df_domclick[complete.cases(df_domclick), ]
month_f <- factor(month_str, levels = month_v)
df_domclick$Месяц <- factor(df_domclick$Месяц, levels = month_v)
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
month_f <- factor(month_str, levels = month_v)
df_domclick$Месяц <- factor(df_domclick$Месяц, levels = month_v)
df_domclick <- df_domclick %>% ifelse('Всего одобренных заявок' == '—', NA, 'Всего одобренных заявок') %>%
fill('Всего одобренных заявок', .direction = 'down')
df_domclick <- df_domclick %>% ifelse(`Всего одобренных заявок` == '—', NA, `Всего одобренных заявок`) %>%
fill(`Всего одобренных заявок`, .direction = 'down')
df_domclick <- df_domclick %>% ifelse(`Всего одобренных заявок` == '—', NA, `Всего одобренных заявок`)
df_domclick$`Всего одобренных заявок` <- ifelse(df_domclick$`Всего одобренных заявок` == '—', NA, df_domclick$`Всего одобренных заявок`)
df_domclick <- df_domclick %>% ifelse($`Всего одобренных заявок` == '—', NA, $`Всего одобренных заявок`)
df_domclick <- df_domclick %>% ifelse(df_domclick$`Всего одобренных заявок` == '—', NA, df_domclick$`Всего одобренных заявок`)
df_domclick$`Доля онлайн-заявок` <- ifelse(df_domclick$`Доля онлайн-заявок` == '—', NA, df_domclick$`Доля онлайн-заявок`)
df_domclick <- df_domclick %>% fill(`Доля онлайн-заявок`, .direction = 'down') %>%
as.numeric(gsub('%', '`Доля онлайн-заявок`', ))
df_domclick <- df_domclick %>% fill(`Доля онлайн-заявок`, .direction = 'down') %>%
as.numeric(gsub('%', `Доля онлайн-заявок`, ))
df_domclick <- df_domclick %>% fill(`Доля онлайн-заявок`, .direction = 'down') %>%
as.numeric(gsub('%', '', `Доля онлайн-заявок`))
df_domclick$`Доля заявок в офисе банка` <- ifelse(df_domclick$`Доля заявок в офисе банка` == '—', NA, df_domclick$`Доля заявок в офисе банка`)
df_domclick <- df_domclick %>% fill(`Всего одобренных заявок`, .direction = 'down')
df_domclick <- df_domclick %>% fill(`Доля онлайн-заявок`, .direction = 'down')
df_domclick <- df_domclick %>% fill(`Доля заявок в офисе банка`, .direction = 'down')
df_domclick$`Доля онлайн-заявок` <- as.numeric(gsub('%', '', df_domclick$`Доля онлайн-заявок`))
df_domclick$`Доля заявок в офисе банка` <- as.numeric(gsub('%', '', df_domclick$`Доля заявок в офисе банка`))
