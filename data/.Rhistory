setwd('/Users/yadonistroman/Documents/GitHub/trustus-r/data')
library(tidyverse)
library(readxl)
df <- read_excel('total.xlsx')
df_for_hist <- df %>% group_by(Месяц) %>% summarise(Индекс.БП = round(mean(Индекс.БП), 1),
Индекс.ПА = round(mean(Индекс.ПА), 1),
Количество.ВТ = round(mean(Количество.ВТ), 1))
df_for_hist$Месяц <- factor(df_for_hist$Месяц, levels = c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'))
ggplot(data = df_for_hist, aes(x = Месяц, y = Индекс.БП)) + geom_col() + ylim(0, 100)
ggplot(data = df_for_hist, aes(x = Месяц, y = Индекс.ПА)) + geom_col()
ggplot(data = df_for_hist, aes(x = Месяц, y = Количество.ВТ)) + geom_col()
BP <- ggplot(data = df, aes(y = Индекс.БП)) + geom_boxplot() + facet_wrap(~Месяц)
str(BP)
BP$layers$geom$extra_params
?geom_boxplot
extra <- function(data) {
iqr <- IQR(data)
q1 <- quantile(data, 0.25)
q3 <- quantile(data, 0.75)
lower_b <- q1 - 1.5 * iqr
upper_b <- q3 + 1.5 * iqr
return(c(lower_b, upper_b))
}
test_pa <- extra(df$Индекс.ПА)
df_out_index_pa <- df[df$Индекс.ПА < test_pa[1] | df$Индекс.ПА > test_pa[2], ]
test_bp <- extra(df$Индекс.БП)
df_out_index_bp <- df[df$Индекс.БП < test_bp[1] | df$Индекс.БП > test_bp[2], ]
test_vt <- extra(df$Количество.ВТ)
df_out_count_vt <- df[df$Количество.ВТ < test_vt[1] | df$Количество.ВТ > test_vt[2], ]
df_top_pa <- df %>%
group_by(Регион) %>%
summarise(`Индекс.ПА` = round(mean(Индекс.ПА), 1))
df_top_pa <- arrange(df_top_pa, desc(Индекс.ПА)) %>% top_n(30)
df_top_bp <- df %>%
group_by(Регион) %>%
summarise(`Индекс.БП` = round(mean(Индекс.БП), 1))
df_top_bp <- arrange(df_top_bp, desc(Индекс.БП)) %>% top_n(30)
df_top_bp_pa <- inner_join(df_top_bp, df_top_pa, by = 'Регион')
df_top <- df[df$Регион %in% df_top_bp_pa$Регион, ]
df_top <- df_top[df_top$Количество.ВТ > 0, ]
target_v <- c('калининградская область', 'камчатский край', 'кировская область', 'нижегородская область')
df_final <- df[df$Регион %in% target_v, ]
ggplot(data = df_final, aes(x = Количество.ВТ, y = Индекс.ПА)) +
geom_point() +
theme_bw() +
stat_ellipse(color = 'red') +
labs(title = 'График зависмости пакутельской активности от\n объема безналичных платежей',
x = 'Количество внутрених туристов',
y = 'Индекс безналичных платежей (50%)')
cor.test(df_final$Количество.ВТ, df_final$Индекс.ПА)
df_ipot_cred <- df_final %>% select(Регион, `Всего одобренных заявок`, `Всего ипотечных сделок`)
df_ipot_cred$`Всего одобренных заявок` <- gsub(' ', '', df_ipot_cred$`Всего одобренных заявок`)
df_ipot_cred$`Всего ипотечных сделок` <- gsub(' ', '', df_ipot_cred$`Всего ипотечных сделок`)
df_ipot_cred$`Всего ипотечных сделок`  <- gsub('>', '', df_ipot_cred$`Всего ипотечных сделок`)
cred_list <- strsplit(df_ipot_cred$`Всего одобренных заявок`, '-')
ipot_list <- strsplit(df_ipot_cred$`Всего ипотечных сделок`, '-')
cred_v <- c()
for (i in cred_list) {
cred_v <- c(cred_v, i[1])
}
df_ipot_cred$`Всего одобренных заявок` <- as.numeric(cred_v)
ipot_v <- c()
for (i in ipot_list) {
ipot_v <- c(ipot_v, i[1])
}
df_ipot_cred$`Всего ипотечных сделок` <- as.numeric(ipot_v)
cor.test(df_ipot_cred$`Всего одобренных заявок`, df_ipot_cred$`Всего ипотечных сделок`)
ggplot(data = df_ipot_cred, aes(x = `Всего одобренных заявок`, y = `Всего ипотечных сделок`)) +
geom_point()
cor.test(df_final$Индекс.БП, df_final$`Онлайн-заявки`)
ggplot(data = df_final, aes(x = Индекс.БП, y = `Онлайн-заявки`)) +
geom_point()
season_v <- rep(c('зима', 'весна', 'лето', 'осень'), each=3)
season_v <- season_v[2:12]
season_v <- c(season_v, season_v[1])
season_v <- rep(season_v, 4)
print(season_v)
df_final <- df_final %>% add_column('Сезон' = season_v, .before = 'Квартал')
df_final$Сезон <- factor(df_final$Сезон, levels = c('зима', 'весна', 'лето', 'осень'))
ggplot(data = df_final, aes(x = `Всего ипотечных сделок`, fill = Сезон)) +
geom_bar() +
theme_bw() +
facet_wrap(~Сезон) +
ggtitle('График количества ипотечных сделок \nпо временам года') +
xlab('Диапазон ипотечных сделок в месяц') +
ylab('Количество диапазонов')
View(df_final)
ggplot(data = df_final, aes(x = Онлайн-заявки)) +
geom_boxplot() +
facet_wrap(~Сезон)
ggplot(data = df_final, aes(x = `Онлайн-заявки`)) +
geom_boxplot() +
facet_wrap(~Сезон)
ggplot(data = df_final, aes(y = `Онлайн-заявки`)) +
geom_boxplot() +
facet_wrap(~Сезон)
ggplot(data = df_final, aes(y = `Онлайн-заявки`)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Сезон)
ggplot(data = df_final, aes(y = `Онлайн-заявки`)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Сезон) +
ggtitle('График распределния онлайн заявок \nпо временам года')
ggplot(data = df_final, aes(y = `Онлайн-заявки`)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Сезон) +
ggtitle('График распределния онлайн заявок \nпо временам года') +
ylab('Доля онлайн-заявок')
ggplot(data = df_final, aes(y = `Онлайн-заявки`)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Сезон) +
ggtitle('График распределния онлайн заявок на кредит \nпо временам года') +
ylab('Доля онлайн-заявок на кредит')
cor.test(df_final$`Онлайн-заявки`, df_final$Сезон, method = 'sperman')
cor.test(df_final$`Онлайн-заявки`, df_final$Сезон, method = 'spearman')
chisq.test(df_final$`Онлайн-заявки`, df_final$Сезон)
fisher.test(df_final$`Онлайн-заявки`, df_final$Сезон)
?fisher.test
fisher.test(df_final$`Онлайн-заявки`, df_final$Сезон, simulate.p.value = TRUE)
fisher.test(df_final$`Онлайн-заявки`, df_final$Сезон)
fisher.test(df_final$`Онлайн-заявки`, df_final$Сезон, alternative = 'greater')
fisher.test(df_final$`Онлайн-заявки`, df_final$Сезон, alternative = 'less')
fisher.test(df_final$`Онлайн-заявки`, df_final$Сезон)
hisq.test(df_final$`Онлайн-заявки`, df_final$Сезон)
chisq.test(df_final$`Онлайн-заявки`, df_final$Сезон)
chisq.test(as.character(df_final$`Онлайн-заявки`), df_final$Сезон)
ggplot(data = df_final, aes(y = `Офлайн-заявки`)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Сезон) +
ggtitle('График распределния онлайн заявок на кредит \nпо временам года') +
ylab('Доля онлайн-заявок на кредит')
ggplot(data = df_final, aes(y = `Онлайн-заявки`)) +
geom_boxplot() +
theme_bw() +
facet_wrap(~Сезон) +
ggtitle('График распределния онлайн заявок на кредит \nпо временам года') +
ylab('Доля онлайн-заявок на кредит')
chisq.test(df_final$`Онлайн-заявки`, df_final$Сезон)
