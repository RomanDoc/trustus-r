View(db)
# построим график рассеивания
ggplot(data = db, aes(x = Age, y = resd)) +
geom_point()
db <- read_excel('DB.xlsx')
# добавим новый столбец с остатками
db$resid <- mod$residuals
# построим график рассеивания
ggplot(data = db, aes(x = Age, y = resid)) +
geom_point()
table(db$Gender, db$Work)
# кол. частот достаточно, что бы пременит тест хиквадрат
chisq.test(db$Gender, db$Work)
library(tidyverse)
beer <- read.csv('Consumo_cerveja.csv')
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
summary(mod_beer)
beer$month <- strsplit(beer$Data, '-')[2]
beer$month <- strsplit(beer$Data, '-')
View(beer)
beer$month <- strsplit(beer$Data, '-')[2]
beer$month <- strsplit(beer$Data, '-')[2][1]
beer$month <- strsplit(beer$Data, '-') %>% beer$month
beer$month <- strsplit(beer$Data, '-') %>% beer$month[2]
beer <- read.csv('Consumo_cerveja.csv')
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
beer$Month <- (strsplit(beer$Data, '-'))[2]
beer$Month <- (strsplit(beer$Data, '-'))[[1]][2]
beer <- read.csv('Consumo_cerveja.csv')
beer$Month <- beer %>% (strsplit(Data, '-'))[[1]][2]
beer$Month <- beer %>% (strsplit(beer$Data, '-'))[[1]][2]
beer$Month <- beer %>% unlist(strsplit(beer$Data, '-'))[2]
beer$Month <- beer %>% unlist(strsplit(beer$Data, '-'))
beer <- beer[-complete.cases(beer), ]
beer <- beer[, -complete.cases(beer)]
beer <- beer[, complete.cases(beer)]
beer <- beer[complete.cases(beer), ]
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
summary(mod_beer)
beer$Month <- unlist(strsplit(beer$Data, '-'))[2]
beer$Month <- strsplit(beer$Data, '-')[[1]][2]
beer <- read.csv('Consumo_cerveja.csv')
beer <- beer[complete.cases(beer), ]
beer$Month <- strsplit(beer$Data, '-')[[1]][2]
beer <- read.csv('Consumo_cerveja.csv')
beer <- beer[complete.cases(beer), ]
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
beer %>% mutate(Month = strsplit(Data, '-')[[1]][2])
beer %>% mutate(Month = strsplit(Data, '-'))
beer %>% mutate(Month = strsplit(Data, '-'))
beer %>% mutate(Month = strsplit(Data, '-')[1])
beer %>% mutate(Month = strsplit(Data, '-')[[1]])
beer <- beer %>% mutate(Month = strsplit(Data, '-'))
beer <- beer %>% mutate(Month = unlist(strsplit(Data, '-')))
beer <- beer %>% mutate(Month = unlist(strsplit(Data, '-')[[1]]))
beer <- beer %>% mutate(Month = strsplit(Data, '-')[1][2])
beer <- beer %>% mutate(Month = strsplit(Data, '-')[2][2])
beer <- beer %>% mutate(Month = strsplit(Data, '-')[1])
beer <- beer %>% mutate(Month = strsplit(Data, '-'))
beer <- beer %>% mutate(Month = strsplit(Data, '-')) %>% Month[2]
beer <- beer %>% mutate(Month = strsplit(Data, '-')) %>% beer$Month[2]
beer <- beer %>% mutate(Month = strsplit(Data, '-')) %>% beer$Month
str(beer)
beer <- beer %>% mutate(Month = Month[2])
beer <- beer %>% mutate(Month = strsplit(Data, '-'))
beer$Month <- beer$Month[2]
beer <- read.csv('Consumo_cerveja.csv')
beer <- beer[complete.cases(beer), ]
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
Month <- strsplit(beer$Data, '-')
View(Month)
Month[2]
Month[2][2]
Month[[2]][2]
Month <- strsplit(beer$Data, '-')[[2]][2]
Month_list <- strsplit(beer$Data, '-')
for (i in Month_list) {
Month <- c(Month, i[2])
}
beer$Month <- Month
Month_list <- strsplit(beer$Data, '-')
Month <- c()
for (i in Month_list) {
Month <- c(Month, i[2])
}
beer$Month <- Month
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
summary(mod_beer)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
library(tidyverse)
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, Month)
View(small_beer)
library(psych)
corr.test(small_beer)
cor(small_beer)
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, as.integer(Month))
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, Month)
mod_beer_1 <- as.factor(beer$Month)
beer$Month <- as.factor(beer$Month)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
beer$Month <- as.integer(beer$Month)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
beer$Month <- as.factor(beer$Month)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, Month)
cor(small_beer)
small_beer$Month <- as.integer(small_beer$Month)
View(small_beer)
cor(small_beer)
corr.test(small_beer)
cor(small_beer)
small_beer$resid <- mod_beer_1$residuals
small_beer$fitt <- mod_beer_1$fitted.values
ggplot(data = small_beer, aes(x = resid, y = fitt)) +
geom_point() +
geom_line(y = 0, color = 'red')
ggplot(data = small_beer, aes(x = resid, y = fitt)) +
geom_point() +
geom_line(yintercept = 0, color = 'red')
ggplot(data = small_beer, aes(x = resid, y = fitt)) +
geom_point() +
geom_line(y = 0, color = 'red')
ggplot(data = small_beer, aes(x = fitt, y = resid)) +
geom_point() +
geom_line(y = 0, color = 'red')
library(lmtest)
library(sandwich)
coeftest(mod_beer_1, vcov = vcovHC(mod2, type = "HC0"))
coeftest(mod_beer_1, vcov = vcovHC(mod_beer_1, type = "HC0"))
plot(mod_beer_1, 5)
diabet <- read.csv('diabetes.csv')
View(diabet)
summary(diabet)
boxplot(diabet)
box_plot <- boxplot(diabet)
box_plot$out
box_plot <- boxplot(diabet)
box_plot <- boxplot(diabet$BMI)
box_plot$out
box_plot$stats
diabet$BMI
BMI <- diabet$BMI
boxplot(BMI)
boxplot(diabet$BMI)
boxplot(diabet)
summary(diabet)
diabet <- diabet %>% filter(BloodPressure != 0, BMI != 0)
library(tidyverse)
diabet <- diabet %>% filter(BloodPressure != 0, BMI != 0)
summary(diabet)
table(diabet$Outcome)
mod_d <- glm(data = diabet, Outcome ~ Glucose + BloodPressure + Insulin + BMI + AGE, family = "binomial")
mod_d <- glm(data = diabet, Outcome ~ Glucose + BloodPressure + Insulin + BMI + Age, family = "binomial")
summary(mod_d)
exp(coef(mod_d))
summary(mod_d)
exp(coef(mod_d))
mod_d$fitted.values
diabet <- diabet %>% mutate(fitt = ifelse(mod_d$fitted.values > 0.5, 1, 0))
TN <- diabet[diabet$Outcome == 0 & diabet$fitt == 0, ]
View(TN)
TN <- nrow(diabet[diabet$Outcome == 0 & diabet$fitt == 0, ])
TP <- nrow(diabet[diabet$Outcome == 1 & diabet$fitt == 1, ])
FN <- nrow(diabet[diabet$Outcome == 1 & diabet$fitt == 0, ])
FP <- nrow(diabet[diabet$Outcome == 0 & diabet$fitt == 1, ])
sensitivity <- TP / (TP + FN)
specificity <- TN / (TN + FP)
accuracy <- (TP + TN) / nrow(diabet)
View(diamonds)
library(tidyverse)
View(diamonds)
?barplot
shiny::runApp('C:/Users/yadon/Skillbox/R/19. Аналитические панели в R. Фреймворк Shiny/practice2')
runApp('C:/Users/yadon/Skillbox/R/19. Аналитические панели в R. Фреймворк Shiny/practice2')
runApp('C:/Users/yadon/Skillbox/R/19. Аналитические панели в R. Фреймворк Shiny/practice2')
?read.csv()
library(tidyverse)
library(readxl)
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data/СберИндекс')
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
index <- read_excel('Индекс потребительской активности.xlsx')
index$Дата <- as.character(index$Дата)
turist <- read.csv('Количество внутренних туристов.csv', sep = ';')
cash_of <- separate(cash_of, col = 'Дата', into = c('Год','Месяц'), sep = '-')
cash_of$Год <- as.integer(cash_of$Год)
cash_of$Месяц <- as.integer(cash_of$Месяц)
index <- separate(index, col = 'Дата', into = c('Год','Месяц'), sep = '-')
index$Год <- as.integer(index$Год)
index$Месяц <- as.integer(index$Месяц)
turist <- separate(turist, col = 'Дата', into = c('Год','Месяц'), sep = '-')
turist$Год <- as.integer(turist$Год)
turist$Месяц <- as.integer(turist$Месяц)
month_data <- function(data) {
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
month_str <- c()
for (i in data) {
month_str <- c(month_str, month_v[as.integer(i)])
}
month_f <- factor(month_str, levels = month_v)
return(month_f)
}
cash_of$Месяц <- month_data(cash_of$Месяц)
index$Месяц <- month_data(index$Месяц)
turist$Месяц <- month_data(turist$Месяц)
cash_of <- cash_of[cash_of$Год == 2020, ]
index <- index[index$Год == 2020, ]
turist <- turist[turist$Год == 2020, ]
cash_of <- cash_of %>% group_by(Регион, Год, Месяц) %>% summarise(`Индекс.БП` = median(Значение))
index$Значение <- as.numeric(index$Значение)
index <- index %>% group_by(Регион, Год, Месяц) %>% summarise(`Индекс.ПА` = median(Значение))
turist <- turist %>% group_by(Регион, Год, Месяц) %>% summarise(`Количество.ВТ` = median(Значение))
sum(!complete.cases(cash_of))
sum(!complete.cases(index))
sum(!complete.cases(turist))
df_cash_and_index <- full_join(cash_of, index, by = c('Регион', 'Год', 'Месяц'))
df_sberIndex <- full_join(df_cash_and_index, turist, by = c('Регион', 'Год', 'Месяц'))
View(df_sberIndex[!complete.cases(df_sberIndex), ])
df_rus <- df_sberIndex[df_sberIndex$Регион == 'Россия', ]
df_sberIndex <- df_sberIndex %>% mutate(Индекс.БП = ifelse(is.na(Индекс.БП), df_rus$Индекс.БП, Индекс.БП))
df_sberIndex <- df_sberIndex %>% mutate(Индекс.ПА = ifelse(is.na(Индекс.ПА), df_rus$Индекс.ПА, Индекс.ПА))
df_sberIndex <- df_sberIndex %>% mutate(Количество.ВТ = ifelse(is.na(Количество.ВТ), df_rus$Количество.ВТ, Количество.ВТ))
df_sberIndex <- df_sberIndex[df_sberIndex$Регион != 'Россия', ]
df_sberIndex$Регион[df_sberIndex$Регион == 'Алтай'] <- 'Республика Алтай'
df_sberIndex$Регион[df_sberIndex$Регион == 'Адыгея'] <- 'Республика Адыгея'
df_sberIndex <- df_sberIndex %>% group_by(Регион, Год, Месяц) %>% summarise(`Индекс.БП` = `Индекс.БП`,
`Индекс.ПА` = `Индекс.ПА`,
`Количество.ВТ` = `Количество.ВТ`)
df_target_reg <- cbind.data.frame('Регион' = sort(unique(df_sberIndex$Регион)))
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data/ДомКлик/Рейтинг регионов по количеству заявок на кредит/')
path_ <- 'C:/Users/yadon/Skillbox/R/TrustUs_R/data/ДомКлик/Рейтинг регионов по количеству заявок на кредит/'
load_xlsx <- function(name_file, name_month) {
res <- read_excel(paste(path_, name_file, sep = ''))
res <- res %>% mutate(`Год` = 2020, `Месяц` = name_month)
return(res)
}
august <- load_xlsx('август 2020.xlsx', 'август')
april <- load_xlsx('апрель 2020.xlsx', 'апрель')
december <- load_xlsx('декабрь 2020.xlsx', 'декабрь')
july <- load_xlsx('июль 2020.xlsx', 'июль')
june <- load_xlsx('июнь 2020.xlsx', 'июнь')
may <- load_xlsx('май 2020.xlsx', 'май')
march <- load_xlsx('март 2020.xlsx', 'март')
november <- load_xlsx('ноябрь 2020.xlsx', 'ноябрь')
october <- load_xlsx('октябрь 2020.xlsx', 'октябрь')
september <- load_xlsx('сентябрь 2020.xlsx', 'сентябрь')
february <- load_xlsx('февраль 2020.xlsx', 'февраль')
january <- load_xlsx('январь 2020.xlsx', 'январь')
df_credit <- bind_rows(august, april, december, july, june, may, march, november, october, september, february, january)
df_credit <- df_credit %>% select('Регион', 'Месяц', 'Год', 'Всего одобренных заявок', 'Доля онлайн-заявок', 'Доля заявок в офисе банка')
df_credit <- df_credit[complete.cases(df_credit), ]
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
df_credit$`Всего одобренных заявок` <- ifelse(df_credit$`Всего одобренных заявок` == '—', NA, df_credit$`Всего одобренных заявок`)
df_credit$`Доля онлайн-заявок` <- ifelse(df_credit$`Доля онлайн-заявок` == '—', NA, df_credit$`Доля онлайн-заявок`)
df_credit$`Доля заявок в офисе банка` <- ifelse(df_credit$`Доля заявок в офисе банка` == '—', NA, df_credit$`Доля заявок в офисе банка`)
df_credit <- df_credit %>% fill(`Всего одобренных заявок`, .direction = 'down')
df_credit <- df_credit %>% fill(`Доля онлайн-заявок`, .direction = 'down')
df_credit <- df_credit %>% fill(`Доля заявок в офисе банка`, .direction = 'down')
df_credit$`Доля онлайн-заявок` <- as.numeric(gsub('%', '', df_credit$`Доля онлайн-заявок`)) / 100
df_credit$`Доля заявок в офисе банка` <- as.numeric(gsub('%', '', df_credit$`Доля заявок в офисе банка`)) / 100
df_credit <- df_credit %>% group_by(Регион, Год, Месяц) %>% summarise(`Всего одобренных заявок` = `Всего одобренных заявок`,
`Онлайн-заявки` = `Доля онлайн-заявок`,
`Офлайн-заявки` = `Доля заявок в офисе банка`)
path_ <- 'C:/Users/yadon/Skillbox/R/TrustUs_R/data/ДомКлик/Рейтинг регионов по количеству ипотечных сделок/'
august <- load_xlsx('август 2020.xlsx', 'август')
april <- load_xlsx('апрель 2020.xlsx', 'апрель')
december <- load_xlsx('декабрь 2020.xlsx', 'декабрь')
july <- load_xlsx('июль 2020.xlsx', 'июль')
june <- load_xlsx('июнь 2020.xlsx', 'июнь')
may <- load_xlsx('май 2020.xlsx', 'май')
march <- load_xlsx('март 2020.xlsx', 'март')
november <- load_xlsx('ноябрь 2020.xlsx', 'ноябрь')
october <- load_xlsx('октябрь 2020.xlsx', 'октябрь')
september <- load_xlsx('сентябрь 2020.xlsx', 'сентябрь')
february <- load_xlsx('февраль 2020.xlsx', 'февраль')
january <- load_xlsx('январь 2020.xlsx', 'январь')
df_ipoteka <- bind_rows(august, april, december, july, june, may, march, november, october, september, february, january)
df_ipoteka <- df_ipoteka %>% select('Регион', 'Месяц', 'Год', 'Всего ипотечных сделок', 'Доля сделок, первичка', 'Доля сделок, вторичка')
df_ipoteka <- df_ipoteka[complete.cases(df_ipoteka), ]
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
df_ipoteka$`Всего ипотечных сделок` <- ifelse(df_ipoteka$`Всего ипотечных сделок` == '—', NA, df_ipoteka$`Всего ипотечных сделок`)
df_ipoteka$`Доля сделок, первичка` <- ifelse(df_ipoteka$`Доля сделок, первичка` == '—', NA, df_ipoteka$`Доля сделок, первичка`)
df_ipoteka$`Доля сделок, вторичка` <- ifelse(df_ipoteka$`Доля сделок, вторичка` == '—', NA, df_ipoteka$`Доля сделок, вторичка`)
df_ipoteka <- df_ipoteka %>% fill(`Всего ипотечных сделок`, .direction = 'down')
df_ipoteka <- df_ipoteka %>% fill(`Доля сделок, первичка`, .direction = 'down')
df_ipoteka <- df_ipoteka %>% fill(`Доля сделок, вторичка`, .direction = 'down')
df_ipoteka$`Доля сделок, первичка` <- as.numeric(gsub('%', '', df_ipoteka$`Доля сделок, первичка`)) / 100
df_ipoteka$`Доля сделок, вторичка` <- as.numeric(gsub('%', '', df_ipoteka$`Доля сделок, вторичка`)) / 100
df_ipoteka <- df_ipoteka %>% group_by(Регион, Год, Месяц) %>% summarise(`Всего ипотечных сделок` = `Всего ипотечных сделок`,
`Доля сделок, первичка` = `Доля сделок, первичка`,
`Доля сделок, вторичка` = `Доля сделок, вторичка`)
df_domclick <- full_join(df_credit, df_ipoteka, by = c('Регион', 'Год', 'Месяц'))
df_domclick[df_domclick == 'Еврейская Автономная область'] <- 'Еврейская автономная область'
df_domclick[df_domclick == 'Карачаево-Черкесская Республика'] <- 'Республика Карачаево-Черкессия'
df_domclick[df_domclick == 'Республика Мордовия'] <- 'Мордовия'
df_domclick[df_domclick == 'Ненецкий Автономный округ'] <- 'Ненецкий АО'
df_domclick[df_domclick == 'Республика Северная Осетия - Алания'] <- 'Республика Северная Осетия-Алания'
df_domclick[df_domclick == 'Ханты-Мансийский Автономный округ - Югра'] <- 'Ханты-Мансийский АО - Югра'
df_domclick[df_domclick == 'Чукотский Автономный округ'] <- 'Чукотский АО'
df_domclick[df_domclick == 'Ямало-Ненецкий Автономный округ'] <- 'Ямало-Ненецкий АО'
setwd('C:/Users/yadon/Skillbox/R/Для финальной работы/Данные для финальной работы/Данные/Росстат')
salary <- read_excel('Заработная плата.xlsx', sheet = 2)
salary <- salary %>% select(1, 14:25)
salary <- salary[-c(1:4, 23, 26, 36, 45, 53, 68, 71, 72, 77, 88), ]
salary[salary == 'Архангельская область без авт. округа.'] <- 'Архангельская область'
salary[salary == 'в том числе Ненецкий авт.округ'] <- 'Ненецкий Автономный округ'
salary[salary == 'Тюменская область без авт. округов'] <- 'Тюменская область'
names(salary) <- c('Регион', 'январь-квартал 1', 'февраль-квартал 1', 'март-квартал 1',
'апрель-квартал 2', 'май-квартал 2', 'июнь-квартал 2',
'июль-квартал 3', 'август-квартал 3', 'сентябрь-квартал 3',
'октябрь-квартал 4', 'ноябрь-квартал 4', 'декабрь-квартал 4')
salary <- salary %>% gather('Месяц', 'Среднемесячная з.п.', 2:13)
salary <- separate(salary, col = 'Месяц', into = c('Месяц','Квартал'), sep = '-')
salary$`Среднемесячная з.п.` <- round(as.numeric(salary$`Среднемесячная з.п.`), 1)
salary$Месяц <- factor(salary$Месяц, levels = month_v)
salary$Год <- 2020
salary <- salary %>% group_by(Регион, Год, Месяц, Квартал) %>% summarise(`Среднемесячная з.п.` = `Среднемесячная з.п.`)
internet <- read_excel('Интернет.xlsx', sheet = 'Беспроводная наземная')
internet <- internet %>% select(1, 25:28)
names(internet) <- c('Регион', 'квартал 1', 'квартал 2', 'квартал 3', 'квартал 4')
internet <- internet[-c(1:6, 25, 36, 45, 53, 68, 71, 76, 87), ]
internet[internet == 'в том числе Ханты-Мансийский автономный АО - Югра'] <- 'Ханты-Мансийский  авт. округ - Югра'
internet[internet == 'Ямало-Ненецкий автономный АО'] <- 'Ямало-Ненецкий авт. округ'
internet[internet == 'Тюменская область без АО'] <- 'Тюменская область'
internet$`квартал 1` <- ifelse(internet$`квартал 1` == '...', NA, internet$`квартал 1`)
internet$`квартал 2` <- ifelse(internet$`квартал 2` == '...', NA, internet$`квартал 2`)
internet$`квартал 3` <- ifelse(internet$`квартал 3` == '...', NA, internet$`квартал 3`)
internet$`квартал 4` <- ifelse(internet$`квартал 4` == '...', NA, internet$`квартал 4`)
internet <- internet %>% fill(`квартал 1`, .direction = 'down')
internet <- internet %>% fill(`квартал 2`, .direction = 'down')
internet <- internet %>% fill(`квартал 3`, .direction = 'down')
internet <- internet %>% fill(`квартал 4`, .direction = 'down')
internet <- internet %>% gather('Квартал', 'Число абонентов', 2:5)
internet$Квартал <- factor(internet$Квартал, levels = c('квартал 1', 'квартал 2', 'квартал 3', 'квартал 4'))
internet <- internet %>% group_by(Регион, Квартал) %>% summarise(`Число абонентов` = `Число абонентов`)
internet$`Число абонентов` <- as.integer(internet$`Число абонентов`)
salary <- salary[salary$Регион != 'г.Севастополь', ]
salary[salary == 'г.Москва'] <- 'Москва'
salary[salary == 'г.Санкт-Петербург'] <- 'Санкт-Петербург'
salary[salary == 'Еврейская авт.область'] <- 'Еврейская автономная область'
salary[salary == 'Карачаево-Черкесская Республика'] <- 'Республика Карачаево-Черкессия'
salary[salary == 'Ненецкий Автономный округ'] <- 'Ненецкий АО'
salary <- salary[salary$Регион != 'Республика Крым', ]
salary[salary == 'Республика Мордовия'] <- 'Мордовия'
salary <- salary[salary$Регион != 'Республика Мордовия', ]
salary[salary == 'Республика Северная  Осетия - Алания'] <- 'Республика Северная Осетия-Алания'
salary[salary == 'Ханты-Мансийский  авт. округ - Югра'] <- 'Ханты-Мансийский АО - Югра'
salary[salary == 'Чукотский авт.округ'] <- 'Чукотский АО'
salary[salary == 'Ямало-Ненецкий авт. округ'] <- 'Ямало-Ненецкий АО'
internet <- internet[internet$Регион != 'г. Севастополь', ]
internet[internet == 'г. Москва'] <- 'Москва'
internet[internet == 'г. Санкт-Петербург'] <- 'Санкт-Петербург'
internet[internet == 'Карачаево-Черкесская Республика'] <- 'Республика Карачаево-Черкессия'
internet[internet == 'Республика Мордовия'] <- 'Мордовия'
internet <- internet[internet$Регион != 'Республика Крым', ]
internet[internet == 'Республика Северная Осетия - Алания'] <- 'Республика Северная Осетия-Алания'
internet[internet == 'Ханты-Мансийский  авт. округ - Югра'] <- 'Ханты-Мансийский АО - Югра'
internet[internet == 'Чукотский автономный округ'] <- 'Чукотский АО'
internet[internet == 'Ямало-Ненецкий авт. округ'] <- 'Ямало-Ненецкий АО'
internet[internet == 'Удмуртская республика'] <- 'Удмуртская Республика'
internet[internet == 'Чувашская республика'] <- 'Чувашская Республика'
df_s_i <- full_join(internet, salary, by = c('Регион', 'Квартал'))
df_s_i$Месяц <- factor(df_s_i$Месяц, levels = month_v)
df_s_i <- df_s_i %>% group_by(Регион, Год, Месяц, Квартал) %>% summarise(`Число абонентов` = `Число абонентов`,
`Среднемесячная з.п.` = `Среднемесячная з.п.`)
unemployment <- read_excel('Уровень безработицы населения.xls', sheet = '3 месяца 15-72 лет')
unemployment <- unemployment %>% select(1, 40:51)
names(unemployment) <- c('Регион', 'январь-квартал 1', 'февраль-квартал 1', 'март-квартал 1',
'апрель-квартал 2', 'май-квартал 2', 'июнь-квартал 2',
'июль-квартал 3', 'август-квартал 3', 'сентябрь-квартал 3',
'октябрь-квартал 4', 'ноябрь-квартал 4', 'декабрь-квартал 4')
unemployment <- unemployment[complete.cases(unemployment), ]
unemployment <- unemployment %>% gather('Месяц', `Уровень безработицы`, 2:13)
unemployment$`Уровень безработицы` <- round(as.numeric(unemployment$`Уровень безработицы`), 1)
unemployment <- separate(unemployment, col = 'Месяц', into = c('Месяц','Квартал'), sep = '-')
unemployment$Месяц <- factor(unemployment$Месяц, levels = month_v)
unemployment$Год <- 2020
View(unemployment)
sort(unique(unemployment$Регион))
View(df_target_reg)
View(unemployment)
unemployment <- read_excel('Уровень безработицы населения.xls', sheet = '3 месяца 15-72 лет')
unemployment <- unemployment %>% select(1, 40:51)
unemployment <- unemployment[-c(1:5, 24, 27, 37, 45, 46, 54, 69, 72, 77, 88), ]
names(unemployment) <- c('Регион', 'январь-квартал 1', 'февраль-квартал 1', 'март-квартал 1',
'апрель-квартал 2', 'май-квартал 2', 'июнь-квартал 2',
'июль-квартал 3', 'август-квартал 3', 'сентябрь-квартал 3',
'октябрь-квартал 4', 'ноябрь-квартал 4', 'декабрь-квартал 4')
unemployment <- unemployment[complete.cases(unemployment), ]
unemployment <- unemployment %>% gather('Месяц', `Уровень безработицы`, 2:13)
unemployment$`Уровень безработицы` <- round(as.numeric(unemployment$`Уровень безработицы`), 1)
unemployment <- separate(unemployment, col = 'Месяц', into = c('Месяц','Квартал'), sep = '-')
unemployment$Месяц <- factor(unemployment$Месяц, levels = month_v)
unemployment$Год <- 2020
sort(unique(unemployment$Регион))
unemployment[unemployment == 'в том числе Ханты-Мансийский автономный АО - Югра'] <- 'Ханты-Мансийский  авт. округ - Югра'
unemployment[unemployment == 'Ямало-Ненецкий автономный АО'] <- 'Ямало-Ненецкий авт. округ'
unemployment[unemployment == 'Тюменская область без АО'] <- 'Тюменская область'
sort(unique(unemployment$Регион))
unemployment[unemployment == 'в том числе: \nНенецкий автономный округ'] <- 'Ненецкий АО'
unemployment[unemployment == 'в том числе: \nХанты-Мансийский автономный округ - Югра'] <- 'Ханты-Мансийский АО - Югра'
sort(unique(unemployment$Регион))
unemployment[unemployment == 'Архангельская область без авт. округа'] <- 'Архангельская область'
sort(unique(unemployment$Регион))
unemployment[unemployment == 'г. Москва'] <- 'Москва'
sort(unique(unemployment$Регион))
unemployment[unemployment == 'г.Санкт-Петербург'] <- 'Санкт-Петербург'
sort(unique(unemployment$Регион))
unemployment[unemployment == 'Карачаево-Черкесская Республика'] <- 'Республика Карачаево-Черкессияг'
sort(unique(unemployment$Регион))
unemployment[unemployment == 'Республика Мордовия'] <- 'Мордовия'
sort(unique(unemployment$Регион))
unemployment <- unemployment[unemployment$Регион != 'Республика Крым', ]
sort(unique(unemployment$Регион))
unemployment[unemployment == 'Республика Северная Осетия - Алания'] <- 'Республика Северная Осетия-Алания'
sort(unique(unemployment$Регион))
unemployment[unemployment == 'Тюменская область без авт. округов'] <- 'РТюменская область'
sort(unique(unemployment$Регион))
unemployment[unemployment == 'РТюменская область'] <- 'Тюменская область'
sort(unique(unemployment$Регион))
sort(unique(unemployment$Регион))
unemployment[unemployment == 'Чукотский автономный округ'] <- 'Чукотский АО'
unemployment[unemployment == 'Ямало-Ненецкий автономный округ'] <- 'Ямало-Ненецкий АО'
sort(unique(unemployment$Регион))
unemployment <- unemployment %>% group_by(Регион, Год, Месяц, Квартал) %>% summarise(`Уровень безработицы` = `Уровень безработицы`)
df_rosstat <- full_join(df_s_i, unemployment, by = c('Регион', 'Квартал'))
View(df_rosstat)
View(df_s_i)
df_rosstat <- full_join(df_s_i, unemployment, by = c('Регион', 'Год', 'Месяц', 'Квартал'))
View(df_rosstat)
View(df_domclick)
View(df_sberIndex)
View(df_domclick)
View(df_rosstat)
unemployment <- unemployment %>% fill(`Число абонентов`, .direction = 'up')
unemployment <- unemployment %>% fill(Число абонентов, .direction = 'up')
unemployment <- unemployment %>% fill('Число абонентов', .direction = 'up')
df_rosstat <- df_rosstat %>% fill(`Число абонентов`, .direction = 'up')
df_rosstat <- df_rosstat %>% fillfill(`Число абонентов`, .direction = 'down')
df_rosstat <- df_rosstat %>% fill(`Число абонентов`, .direction = 'down')
View(df_rosstat)
View(df_rosstat)
df_rosstat$`Число абонентов` <- fill(df_rosstat$`Число абонентов`, .direction = 'down')
df_rosstat$`Число абонентов` <- as.character(df_rosstat$`Число абонентов`)
df_rosstat <- df_rosstat %>% fill(`Число абонентов`, .direction = 'up')
df_rosstat <- df_rosstat %>% fill(`Число абонентов`, .direction = 'down')
df_rosstat$`Число абонентов` <- as.numeric(df_rosstat$`Число абонентов`)
df_rosstat <- df_rosstat %>% mutate(`Число абонентов` = ifelse(is.na(`Число абонентов`), 'Архангельская область', `Число абонентов`))
target_vol <- unique(df_rosstat
df_rosstat <- df_rosstat %>% mutate(`Число абонентов` = ifelse(is.na(`Число абонентов`), 'Архангельская область', `Число абонентов`)))
df_rosstat <- df_rosstat %>% mutate(`Число абонентов` = ifelse(is.na(`Число абонентов`), 'Архангельская область', `Число абонентов`))
df_rosstat <- df_rosstat %>% mutate(`Число абонентов` = ifelse(is.na(`Число абонентов`), `Архангельская область`, `Число абонентов`))
target_vol <- unique(df_rosstat$`Число абонентов` == `Архангельская область`)
df_terget <- df_rosstat[df_rosstat$Регион == 'Архангельская область', ]
View(df_terget)
df_rosstat <- df_rosstat %>% mutate(`Число абонентов` = ifelse(is.na(`Число абонентов`), df_terget$`Число абонентов`, `Число абонентов`))
View(df_domclick)
View(df_sberIndex)
df_d_s <- full_join(df_sberIndex, df_domclick, by = c('Регион', 'Год', 'Месяц'))
View(df_d_s)
sort(unique(df_domclick$Регион))
df_d_s <- full_join(df_sberIndex, df_domclick, by = c('Регион', 'Год', 'Месяц'))
View(df_d_s)
df_sberIndex$Регион <- tolower(df_sberIndex$Регион)
df_domclick$Регион <- tolower(df_domclick$Регион)
df_rosstat$Регион <- tolower(df_rosstat$Регион)
df_d_s <- full_join(df_sberIndex, df_domclick, by = c('Регион', 'Год', 'Месяц'))
View(df_d_s)
df_total <- full_join(df_d_s, df_rosstat, by = c('Регион', 'Год', 'Месяц'))
View(df_total)
df_total <- full_join(df_rosstat, df_d_s, by = c('Регион', 'Год', 'Месяц'))
library(WriteXLS)
?WriteXLS
WriteXLS(df_total, 'Total.xls', SheetNames = 'total')
setwd('C:/Users/yadon/Skillbox/R/Для финальной работы/Данные для финальной работы/Данные')
WriteXLS(df_total, ExcelFileName = 'Total.xls', SheetNames = 'total')
install.packages('WriteXLS')
library(WriteXLS)
setwd('C:/Users/yadon/Skillbox/R/Для финальной работы/Данные для финальной работы/Данные')
WriteXLS(df_total, ExcelFileName = 'Total.xls', SheetNames = 'total')
WriteXLS(df_total, 'total.xls')
WriteXLS(df_total, 'total.xlsx')
library(openxlsx)
setwd('C:/Users/yadon/Skillbox/R/Для финальной работы/Данные для финальной работы/Данные')
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data/')
?write.xlsx
write.xlsx(df_total, 'total.xlsx')
