df_for_hist$Месяц <- factor(df_for_hist$Месяц, levels = c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'))
ggplot(data = df_for_hist, aes(x = Месяц, y = Индекс.БП)) + geom_col() + ylim(0, 100)
ggplot(data = df_for_hist, aes(x = Месяц, y = Индекс.ПА)) + geom_col()
ggplot(data = df_for_hist, aes(x = Месяц, y = Количество.ВТ)) + geom_col()
BP <- ggplot(data = df, aes(y = Индекс.БП)) + geom_boxplot() + facet_wrap(~Месяц)
index_bp <- boxplot(df$Индекс.БП ~ df$Месяц)
df_out_index_bp <- df[df$Индекс.БП %in% index_bp$out, ]
index_pa <- boxplot(df$Индекс.ПА ~ df$Месяц)
df_out_index_pa <- df[df$Индекс.ПА %in% index_pa$out, ]
count_vt <- boxplot(df$Количество.ВТ ~ df$Месяц)
df_out_count_vt <- df[df$Количество.ВТ %in% count_vt$out, ]
View(df_out_index_pa)
View(index_pa)
View(index_pa)
boxplot(df$Индекс.ПА ~ df$Месяц)
iqr <- IQR(df$Индекс.ПА)
q1 <- quantile(df$Индекс.ПА, 0.25)
q3 <- quantile(df$Индекс.ПА, 0.75)
lower_b <- q1 - 1.5 * iqr
upper_b <- q3 + 1.5 * iqr
test <- df[df$Индекс.ПА < lower_b | df$Индекс.ПА > upper_b, ]
View(test)
extra <- function(data) {
iqr <- IQR(data)
q1 <- quantile(data, 0.25)
q3 <- quantile(data, 0.75)
lower_b <- q1 - 1.5 * iqr
upper_b <- q3 + 1.5 * iqr
return(c(lower_b, upper_b))
}
test_pa <- extra(df$Индекс.ПА)
df_test_pa <- df[df$Индекс.ПА < test_pa[1] | df$Индекс.ПА > test_pa[2], ]
test_pa[1]
test_pa[2]
test_bp <- extra(df$Индекс.БП)
df_test_bp <- df[df$Индекс.БП < test_bp[1] | df$Индекс.БП > test_bp[2], ]
test_bp[1]
test_bp[2]
test_vt <- extra(df$Количество.ВТ)
df_test_vt <- df[df$Количество.ВТ < test_vt[1] | df$Количество.ВТ > test_vt[2], ]
test_vt[1]
test_vt[2]
View(df_test_bp)
View(df_test_bp)
View(df_out_index_bp)
View(df_out_count_vt)
View(df_for_hist)
View(df_out_index_pa)
View(df_test_pa)
View(df_test_bp)
View(df_test_pa)
BP <- ggplot(data = df, aes(y = Индекс.БП)) + geom_boxplot() + facet_wrap(~Месяц)
BP$layout
BP$guides$guides
str(BP)
BP$mapping
BP$mapping$y
BP$theme
BP$plot_env$extra
str(BP)
BP.layers.geom
BP$layers$geom
BP$layers$geom$extra_params
?BP
?geom_boxplot
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data')
library(tidyverse)
library(readxl)
df <- read_excel('total.xlsx')
df_for_hist <- df %>% group_by(Месяц) %>% summarise(Индекс.БП = round(mean(Индекс.БП), 1),
Индекс.ПА = round(mean(Индекс.ПА), 1),
Количество.ВТ = round(mean(Количество.ВТ), 1))
df_for_hist$Месяц <- factor(df_for_hist$Месяц, levels = c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'))
ggplot(data = df_for_hist, aes(x = Месяц, y = Индекс.БП)) + geom_col() + ylim(0, 100)
ggplot(data = df_for_hist, aes(x = Месяц, y = Индекс.ПА)) + geom_col()
ggplot(data = df_for_hist, aes(x = Месяц, y = Количество.ВТ)) + geom_col()
BP <- ggplot(data = df, aes(y = Индекс.БП)) + geom_boxplot() + facet_wrap(~Месяц)
str(BP)
BP$layers$geom$extra_params
?geom_boxplot
index_bp <- boxplot(df$Индекс.БП ~ df$Месяц)
df_out_index_bp <- df[df$Индекс.БП %in% index_bp$out, ]
index_pa <- boxplot(df$Индекс.ПА ~ df$Месяц)
df_out_index_pa <- df[df$Индекс.ПА %in% index_pa$out, ]
count_vt <- boxplot(df$Количество.ВТ ~ df$Месяц)
df_out_count_vt <- df[df$Количество.ВТ %in% count_vt$out, ]
extra <- function(data) {
iqr <- IQR(data)
q1 <- quantile(data, 0.25)
q3 <- quantile(data, 0.75)
lower_b <- q1 - 1.5 * iqr
upper_b <- q3 + 1.5 * iqr
return(c(lower_b, upper_b))
}
View(df_out_index_pa)
test_pa <- extra(df$Индекс.ПА)
df_test_pa <- df[df$Индекс.ПА < test_pa[1] | df$Индекс.ПА > test_pa[2], ]
test_pa[1]
test_pa[2]
test_bp <- extra(df$Индекс.БП)
df_test_bp <- df[df$Индекс.БП < test_bp[1] | df$Индекс.БП > test_bp[2], ]
test_bp[1]
test_bp[2]
test_vt <- extra(df$Количество.ВТ)
df_test_vt <- df[df$Количество.ВТ < test_vt[1] | df$Количество.ВТ > test_vt[2], ]
test_vt[1]
test_vt[2]
View(df_test_bp)
View(df_test_bp)
View(df_test_pa)
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data')
library(tidyverse)
library(readxl)
df <- read_excel('total.xlsx')
df_for_hist <- df %>% group_by(Месяц) %>% summarise(Индекс.БП = round(mean(Индекс.БП), 1),
Индекс.ПА = round(mean(Индекс.ПА), 1),
Количество.ВТ = round(mean(Количество.ВТ), 1))
df_for_hist$Месяц <- factor(df_for_hist$Месяц, levels = c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'))
ggplot(data = df_for_hist, aes(x = Месяц, y = Индекс.БП)) + geom_col() + ylim(0, 100)
ggplot(data = df_for_hist, aes(x = Месяц, y = Индекс.ПА)) + geom_col()
ggplot(data = df_for_hist, aes(x = Месяц, y = Количество.ВТ)) + geom_col()
BP <- ggplot(data = df, aes(y = Индекс.БП)) + geom_boxplot() + facet_wrap(~Месяц)
str(BP)
BP$layers$geom$extra_params
?geom_boxplot
extra <- function(data) {
iqr <- IQR(data)
q1 <- quantile(data, 0.25)
q3 <- quantile(data, 0.75)
lower_b <- q1 - 1.5 * iqr
upper_b <- q3 + 1.5 * iqr
return(c(lower_b, upper_b))
}
test_pa <- extra(df$Индекс.ПА)
df_out_index_pa <- df[df$Индекс.ПА < test_pa[1] | df$Индекс.ПА > test_pa[2], ]
test_bp <- extra(df$Индекс.БП)
df_out_index_bp <- df[df$Индекс.БП < test_bp[1] | df$Индекс.БП > test_bp[2], ]
test_vt <- extra(df$Количество.ВТ)
df_out_count_vt <- df[df$Количество.ВТ < test_vt[1] | df$Количество.ВТ > test_vt[2], ]
View(df_out_count_vt)
View(df_out_index_bp)
View(df_out_index_pa)
View(df_out_index_bp)
# СберИндекс
library(tidyverse)
library(readxl)
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data/СберИндекс')
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
index <- read_excel('Индекс потребительской активности.xlsx')
index$Дата <- as.character(index$Дата)
turist <- read.csv('Количество внутренних туристов.csv', sep = ';')
# добовления столбца год/месяц
cash_of <- separate(cash_of, col = 'Дата', into = c('Год','Месяц'), sep = '-')
cash_of$Год <- as.integer(cash_of$Год)
cash_of$Месяц <- as.integer(cash_of$Месяц)
index <- separate(index, col = 'Дата', into = c('Год','Месяц'), sep = '-')
index$Год <- as.integer(index$Год)
index$Месяц <- as.integer(index$Месяц)
turist <- separate(turist, col = 'Дата', into = c('Год','Месяц'), sep = '-')
turist$Год <- as.integer(turist$Год)
turist$Месяц <- as.integer(turist$Месяц)
# функция для добовления месяца строкой
month_data <- function(data) {
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
month_str <- c()
for (i in data) {
month_str <- c(month_str, month_v[as.integer(i)])
}
month_f <- factor(month_str, levels = month_v)
return(month_f)
}
# добавления месяца строкой
cash_of$Месяц <- month_data(cash_of$Месяц)
index$Месяц <- month_data(index$Месяц)
turist$Месяц <- month_data(turist$Месяц)
# отфильтруем датафраймы по 2020 году
cash_of <- cash_of[cash_of$Год == 2020, ]
index <- index[index$Год == 2020, ]
turist <- turist[turist$Год == 2020, ]
# групировка данных по региону, году и месяцу
cash_of <- cash_of %>% group_by(Регион, Год, Месяц) %>% summarise(`Индекс.БП` = median(Значение))
index$Значение <- as.numeric(index$Значение)
index <- index %>% group_by(Регион, Год, Месяц) %>% summarise(`Индекс.ПА` = median(Значение))
turist <- turist %>% group_by(Регион, Год, Месяц) %>% summarise(`Количество.ВТ` = median(Значение))
sum(!complete.cases(cash_of))
sum(!complete.cases(index))
sum(!complete.cases(turist))
# объединение в один датафрейм
df_cash_and_index <- full_join(cash_of, index, by = c('Регион', 'Год', 'Месяц'))
df_sberIndex <- full_join(df_cash_and_index, turist, by = c('Регион', 'Год', 'Месяц'))
View(df_sberIndex[!complete.cases(df_sberIndex), ])
# заполним пропуски значениями сверху
# из-за того, что пропущенные значения присутствуют группами по региону целиком
# заполнение пропущенных значений будем производить по среднему по всей России
df_rus <- df_sberIndex[df_sberIndex$Регион == 'Россия', ]
df_sberIndex <- df_sberIndex %>% mutate(Индекс.БП = ifelse(is.na(Индекс.БП), df_rus$Индекс.БП, Индекс.БП))
df_sberIndex <- df_sberIndex %>% mutate(Индекс.ПА = ifelse(is.na(Индекс.ПА), df_rus$Индекс.ПА, Индекс.ПА))
df_sberIndex <- df_sberIndex %>% mutate(Количество.ВТ = ifelse(is.na(Количество.ВТ), df_rus$Количество.ВТ, Количество.ВТ))
# удалим данные по всей России
df_sberIndex <- df_sberIndex[df_sberIndex$Регион != 'Россия', ]
# заменим значение Алтай на республику Алтай и Адыгея на республика Адыгея
df_sberIndex$Регион[df_sberIndex$Регион == 'Алтай'] <- 'Республика Алтай'
df_sberIndex$Регион[df_sberIndex$Регион == 'Адыгея'] <- 'Республика Адыгея'
# еще раз сгруппируем датафрейм df_sberIndex
df_sberIndex <- df_sberIndex %>% group_by(Регион, Год, Месяц) %>% summarise(`Индекс.БП` = `Индекс.БП`,
`Индекс.ПА` = `Индекс.ПА`,
`Количество.ВТ` = `Количество.ВТ`)
# создадим датафрейм с названиями регионов
df_target_reg <- cbind.data.frame('Регион' = sort(unique(df_sberIndex$Регион)))
# ДомКлик
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data/ДомКлик/Рейтинг регионов по количеству заявок на кредит/')
# Рейтинг регионов по количеству заявок на кредит
# устанвливаем путь до папки с файлами
path_ <- 'C:/Users/yadon/Skillbox/R/TrustUs_R/data/ДомКлик/Рейтинг регионов по количеству заявок на кредит/'
load_xlsx <- function(name_file, name_month) {
res <- read_excel(paste(path_, name_file, sep = ''))
res <- res %>% mutate(`Год` = 2020, `Месяц` = name_month)
return(res)
}
# закгружаем файлы по месяцам
august <- load_xlsx('август 2020.xlsx', 'август')
april <- load_xlsx('апрель 2020.xlsx', 'апрель')
december <- load_xlsx('декабрь 2020.xlsx', 'декабрь')
july <- load_xlsx('июль 2020.xlsx', 'июль')
june <- load_xlsx('июнь 2020.xlsx', 'июнь')
may <- load_xlsx('май 2020.xlsx', 'май')
march <- load_xlsx('март 2020.xlsx', 'март')
november <- load_xlsx('ноябрь 2020.xlsx', 'ноябрь')
october <- load_xlsx('октябрь 2020.xlsx', 'октябрь')
september <- load_xlsx('сентябрь 2020.xlsx', 'сентябрь')
february <- load_xlsx('февраль 2020.xlsx', 'февраль')
january <- load_xlsx('январь 2020.xlsx', 'январь')
# объединим в один датафрейм
df_credit <- bind_rows(august, april, december, july, june, may, march, november, october, september, february, january)
df_credit <- df_credit %>% select('Регион', 'Месяц', 'Год', 'Всего одобренных заявок', 'Доля онлайн-заявок', 'Доля заявок в офисе банка')
# удалим пропущенные строки
df_credit <- df_credit[complete.cases(df_credit), ]
# переведм столбуц Месяц в факторный тип
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
df_credit$Месяц <- factor(df_credit$Месяц, levels = month_v)
# заполним пропуски значениями которые выше.
# в первую очередь заменяем все '-' на NA
df_credit$`Всего одобренных заявок` <- ifelse(df_credit$`Всего одобренных заявок` == '—', NA, df_credit$`Всего одобренных заявок`)
df_credit$`Доля онлайн-заявок` <- ifelse(df_credit$`Доля онлайн-заявок` == '—', NA, df_credit$`Доля онлайн-заявок`)
df_credit$`Доля заявок в офисе банка` <- ifelse(df_credit$`Доля заявок в офисе банка` == '—', NA, df_credit$`Доля заявок в офисе банка`)
# заменяем значения с на те которые сверху
df_credit <- df_credit %>% fill(`Всего одобренных заявок`, .direction = 'down')
df_credit <- df_credit %>% fill(`Доля онлайн-заявок`, .direction = 'down')
df_credit <- df_credit %>% fill(`Доля заявок в офисе банка`, .direction = 'down')
# убираем знак процента и переводим в числовой тип данных
df_credit$`Доля онлайн-заявок` <- as.numeric(gsub('%', '', df_credit$`Доля онлайн-заявок`)) / 100
df_credit$`Доля заявок в офисе банка` <- as.numeric(gsub('%', '', df_credit$`Доля заявок в офисе банка`)) / 100
# группируем данные
df_credit <- df_credit %>% group_by(Регион, Год, Месяц) %>% summarise(`Всего одобренных заявок` = `Всего одобренных заявок`,
`Онлайн-заявки` = `Доля онлайн-заявок`,
`Офлайн-заявки` = `Доля заявок в офисе банка`)
# Рейтинг регионов по количеству ипотечных сделок
# устанвливаем путь до папки с файлами
path_ <- 'C:/Users/yadon/Skillbox/R/TrustUs_R/data/ДомКлик/Рейтинг регионов по количеству ипотечных сделок/'
# закгружаем файлы по месяцам
august <- load_xlsx('август 2020.xlsx', 'август')
april <- load_xlsx('апрель 2020.xlsx', 'апрель')
december <- load_xlsx('декабрь 2020.xlsx', 'декабрь')
july <- load_xlsx('июль 2020.xlsx', 'июль')
june <- load_xlsx('июнь 2020.xlsx', 'июнь')
may <- load_xlsx('май 2020.xlsx', 'май')
march <- load_xlsx('март 2020.xlsx', 'март')
november <- load_xlsx('ноябрь 2020.xlsx', 'ноябрь')
october <- load_xlsx('октябрь 2020.xlsx', 'октябрь')
september <- load_xlsx('сентябрь 2020.xlsx', 'сентябрь')
february <- load_xlsx('февраль 2020.xlsx', 'февраль')
january <- load_xlsx('январь 2020.xlsx', 'январь')
# объединим в один датафрейм
df_ipoteka <- bind_rows(august, april, december, july, june, may, march, november, october, september, february, january)
df_ipoteka <- df_ipoteka %>% select('Регион', 'Месяц', 'Год', 'Всего ипотечных сделок', 'Доля сделок, первичка', 'Доля сделок, вторичка')
# удалим пропущенные строки
df_ipoteka <- df_ipoteka[complete.cases(df_ipoteka), ]
# переведм столбуц Месяц в факторный тип
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
df_ipoteka$Месяц <- factor(df_ipoteka$Месяц, levels = month_v)
# заполним пропуски значениями которые выше.
# в первую очередь заменяем все '-' на NA
df_ipoteka$`Всего ипотечных сделок` <- ifelse(df_ipoteka$`Всего ипотечных сделок` == '—', NA, df_ipoteka$`Всего ипотечных сделок`)
df_ipoteka$`Доля сделок, первичка` <- ifelse(df_ipoteka$`Доля сделок, первичка` == '—', NA, df_ipoteka$`Доля сделок, первичка`)
df_ipoteka$`Доля сделок, вторичка` <- ifelse(df_ipoteka$`Доля сделок, вторичка` == '—', NA, df_ipoteka$`Доля сделок, вторичка`)
# заменяем значения с на те которые сверху
df_ipoteka <- df_ipoteka %>% fill(`Всего ипотечных сделок`, .direction = 'down')
df_ipoteka <- df_ipoteka %>% fill(`Доля сделок, первичка`, .direction = 'down')
df_ipoteka <- df_ipoteka %>% fill(`Доля сделок, вторичка`, .direction = 'down')
# убираем знак процента и переводим в числовой тип данных
df_ipoteka$`Доля сделок, первичка` <- as.numeric(gsub('%', '', df_ipoteka$`Доля сделок, первичка`)) / 100
df_ipoteka$`Доля сделок, вторичка` <- as.numeric(gsub('%', '', df_ipoteka$`Доля сделок, вторичка`)) / 100
# группируем данные
df_ipoteka <- df_ipoteka %>% group_by(Регион, Год, Месяц) %>% summarise(`Всего ипотечных сделок` = `Всего ипотечных сделок`,
`Доля сделок, первичка` = `Доля сделок, первичка`,
`Доля сделок, вторичка` = `Доля сделок, вторичка`)
# объединим два датафрейма
df_domclick <- full_join(df_credit, df_ipoteka, by = c('Регион', 'Год', 'Месяц'))
# испарвим названия регионов, в соответствии с df_sberIndex
df_domclick[df_domclick == 'Еврейская Автономная область'] <- 'Еврейская автономная область'
df_domclick[df_domclick == 'Карачаево-Черкесская Республика'] <- 'Республика Карачаево-Черкессия'
df_domclick[df_domclick == 'Республика Мордовия'] <- 'Мордовия'
df_domclick[df_domclick == 'Ненецкий Автономный округ'] <- 'Ненецкий АО'
df_domclick[df_domclick == 'Республика Северная Осетия - Алания'] <- 'Республика Северная Осетия-Алания'
df_domclick[df_domclick == 'Ханты-Мансийский Автономный округ - Югра'] <- 'Ханты-Мансийский АО - Югра'
df_domclick[df_domclick == 'Чукотский Автономный округ'] <- 'Чукотский АО'
df_domclick[df_domclick == 'Ямало-Ненецкий Автономный округ'] <- 'Ямало-Ненецкий АО'
sort(unique(df_domclick$Регион))
sum(!complete.cases(df_domclick))
# Росстат
setwd('C:/Users/yadon/Skillbox/R/Для финальной работы/Данные для финальной работы/Данные/Росстат')
salary <- read_excel('Заработная плата.xlsx', sheet = 2)
salary <- salary %>% select(1, 14:25)
# удалим ненужные строки
salary <- salary[-c(1:4, 23, 26, 36, 45, 53, 68, 71, 72, 77, 88), ]
# изменим некоторые названия субъектов РФ
salary[salary == 'Архангельская область без авт. округа.'] <- 'Архангельская область'
salary[salary == 'в том числе Ненецкий авт.округ'] <- 'Ненецкий Автономный округ'
salary[salary == 'Тюменская область без авт. округов'] <- 'Тюменская область'
# переименуем столбцы в датафрейме
names(salary) <- c('Регион', 'январь-квартал 1', 'февраль-квартал 1', 'март-квартал 1',
'апрель-квартал 2', 'май-квартал 2', 'июнь-квартал 2',
'июль-квартал 3', 'август-квартал 3', 'сентябрь-квартал 3',
'октябрь-квартал 4', 'ноябрь-квартал 4', 'декабрь-квартал 4')
# переведем структуру датафрейма в длинный формат
salary <- salary %>% gather('Месяц', 'Среднемесячная з.п.', 2:13)
# разобьем столбец Месяц на два: Месяц и квартал
salary <- separate(salary, col = 'Месяц', into = c('Месяц','Квартал'), sep = '-')
# переведем заначения зарплаты в числовой формат и округлим
salary$`Среднемесячная з.п.` <- round(as.numeric(salary$`Среднемесячная з.п.`), 1)
# переведем столбец месяц в факторный тип данных и упорядочим его
salary$Месяц <- factor(salary$Месяц, levels = month_v)
str(salary)
# доьавим столбец с годом
salary$Год <- 2020
# сгрупируем датафрейм по региону, году и месяцу
salary <- salary %>% group_by(Регион, Год, Месяц, Квартал) %>% summarise(`Среднемесячная з.п.` = `Среднемесячная з.п.`)
# загрузим файл интернет
internet <- read_excel('Интернет.xlsx', sheet = 'Беспроводная наземная')
internet <- internet %>% select(1, 25:28)
# переименуем столбцы в датафрейме
names(internet) <- c('Регион', 'квартал 1', 'квартал 2', 'квартал 3', 'квартал 4')
# удалим ненужные строки
internet <- internet[-c(1:6, 25, 36, 45, 53, 68, 71, 76, 87), ]
# изменим некоторые названия субъектов РФ
internet[internet == 'в том числе Ханты-Мансийский автономный АО - Югра'] <- 'Ханты-Мансийский  авт. округ - Югра'
internet[internet == 'Ямало-Ненецкий автономный АО'] <- 'Ямало-Ненецкий авт. округ'
internet[internet == 'Тюменская область без АО'] <- 'Тюменская область'
# заменим знак '...' на NA
internet$`квартал 1` <- ifelse(internet$`квартал 1` == '...', NA, internet$`квартал 1`)
internet$`квартал 2` <- ifelse(internet$`квартал 2` == '...', NA, internet$`квартал 2`)
internet$`квартал 3` <- ifelse(internet$`квартал 3` == '...', NA, internet$`квартал 3`)
internet$`квартал 4` <- ifelse(internet$`квартал 4` == '...', NA, internet$`квартал 4`)
# заменяем значения с на те которые сверху
internet <- internet %>% fill(`квартал 1`, .direction = 'down')
internet <- internet %>% fill(`квартал 2`, .direction = 'down')
internet <- internet %>% fill(`квартал 3`, .direction = 'down')
internet <- internet %>% fill(`квартал 4`, .direction = 'down')
# переведем структуру датафрейма в длинный формат
internet <- internet %>% gather('Квартал', 'Число абонентов', 2:5)
# переведем столбец квартал в факторный тип данных и упорядочим его
internet$Квартал <- factor(internet$Квартал, levels = c('квартал 1', 'квартал 2', 'квартал 3', 'квартал 4'))
str(internet)
# сгрупируем датафрейм по региону, году и месяцу
internet <- internet %>% group_by(Регион, Квартал) %>% summarise(`Число абонентов` = `Число абонентов`)
# переведем число абонентов в числовой тип данных
internet$`Число абонентов` <- as.integer(internet$`Число абонентов`)
# испарвим названия регионов, в соответствии с df_sberIndex
salary <- salary[salary$Регион != 'г.Севастополь', ]
salary[salary == 'г.Москва'] <- 'Москва'
salary[salary == 'г.Санкт-Петербург'] <- 'Санкт-Петербург'
salary[salary == 'Еврейская авт.область'] <- 'Еврейская автономная область'
salary[salary == 'Карачаево-Черкесская Республика'] <- 'Республика Карачаево-Черкессия'
salary[salary == 'Ненецкий Автономный округ'] <- 'Ненецкий АО'
salary <- salary[salary$Регион != 'Республика Крым', ]
salary[salary == 'Республика Мордовия'] <- 'Мордовия'
salary <- salary[salary$Регион != 'Республика Мордовия', ]
salary[salary == 'Республика Северная  Осетия - Алания'] <- 'Республика Северная Осетия-Алания'
salary[salary == 'Ханты-Мансийский  авт. округ - Югра'] <- 'Ханты-Мансийский АО - Югра'
salary[salary == 'Чукотский авт.округ'] <- 'Чукотский АО'
salary[salary == 'Ямало-Ненецкий авт. округ'] <- 'Ямало-Ненецкий АО'
internet <- internet[internet$Регион != 'г. Севастополь', ]
internet[internet == 'г. Москва'] <- 'Москва'
internet[internet == 'г. Санкт-Петербург'] <- 'Санкт-Петербург'
internet[internet == 'Карачаево-Черкесская Республика'] <- 'Республика Карачаево-Черкессия'
internet[internet == 'Республика Мордовия'] <- 'Мордовия'
internet <- internet[internet$Регион != 'Республика Крым', ]
internet[internet == 'Республика Северная Осетия - Алания'] <- 'Республика Северная Осетия-Алания'
internet[internet == 'Ханты-Мансийский  авт. округ - Югра'] <- 'Ханты-Мансийский АО - Югра'
internet[internet == 'Чукотский автономный округ'] <- 'Чукотский АО'
internet[internet == 'Ямало-Ненецкий авт. округ'] <- 'Ямало-Ненецкий АО'
internet[internet == 'Удмуртская республика'] <- 'Удмуртская Республика'
internet[internet == 'Чувашская республика'] <- 'Чувашская Республика'
# объединим два датафрейма salary и internet
df_s_i <- full_join(internet, salary, by = c('Регион', 'Квартал'))
df_s_i$Месяц <- factor(df_s_i$Месяц, levels = month_v)
df_s_i <- df_s_i %>% group_by(Регион, Год, Месяц, Квартал) %>% summarise(`Число абонентов` = `Число абонентов`,
`Среднемесячная з.п.` = `Среднемесячная з.п.`)
# загрузим данные по уровню безработицы
unemployment <- read_excel('Уровень безработицы населения.xls', sheet = '3 месяца 15-72 лет')
unemployment <- unemployment %>% select(1, 40:51)
# удалим ненужние строки
unemployment <- unemployment[-c(1:5, 24, 27, 37, 45, 46, 54, 69, 72, 77, 88), ]
# изменим названия колонок
names(unemployment) <- c('Регион', 'январь-квартал 1', 'февраль-квартал 1', 'март-квартал 1',
'апрель-квартал 2', 'май-квартал 2', 'июнь-квартал 2',
'июль-квартал 3', 'август-квартал 3', 'сентябрь-квартал 3',
'октябрь-квартал 4', 'ноябрь-квартал 4', 'декабрь-квартал 4')
unemployment <- unemployment[complete.cases(unemployment), ]
# переведем структуру датафрейма в длинный формат
unemployment <- unemployment %>% gather('Месяц', `Уровень безработицы`, 2:13)
# изменим тип данных с толбце уровень безработицы
unemployment$`Уровень безработицы` <- round(as.numeric(unemployment$`Уровень безработицы`), 1)
# рзаделим столбец Месяц на столбцы месяц и квартал
unemployment <- separate(unemployment, col = 'Месяц', into = c('Месяц','Квартал'), sep = '-')
# столбец Месяц сделаем факторным и упорядочим его
unemployment$Месяц <- factor(unemployment$Месяц, levels = month_v)
str(unemployment)
# добавим столбец с годом
unemployment$Год <- 2020
# оторедактируем названия регионов в соотыетствии с df_sberIndex
unemployment[unemployment == 'в том числе: \nХанты-Мансийский автономный округ - Югра'] <- 'Ханты-Мансийский АО - Югра'
unemployment[unemployment == 'в том числе: \nНенецкий автономный округ'] <- 'Ненецкий АО'
unemployment[unemployment == 'Архангельская область без авт. округа'] <- 'Архангельская область'
unemployment[unemployment == 'г. Москва'] <- 'Москва'
unemployment[unemployment == 'г.Санкт-Петербург'] <- 'Санкт-Петербург'
unemployment[unemployment == 'Карачаево-Черкесская Республика'] <- 'Республика Карачаево-Черкессия'
unemployment[unemployment == 'Республика Северная Осетия - Алания'] <- 'Республика Северная Осетия-Алания'
unemployment[unemployment == 'Тюменская область без авт. округов'] <- 'Тюменская область'
unemployment[unemployment == 'Республика Мордовия'] <- 'Мордовия'
unemployment <- unemployment[unemployment$Регион != 'Республика Крым', ]
unemployment[unemployment == 'Чукотский автономный округ'] <- 'Чукотский АО'
unemployment[unemployment == 'Ямало-Ненецкий автономный округ'] <- 'Ямало-Ненецкий АО'
sort(unique(unemployment$Регион))
# сгрупируем датафрейм
unemployment <- unemployment %>% group_by(Регион, Год, Месяц, Квартал) %>% summarise(`Уровень безработицы` = `Уровень безработицы`)
# объединим датафреймы
df_rosstat <- full_join(df_s_i, unemployment, by = c('Регион', 'Год', 'Месяц', 'Квартал'))
# заполним пропущенные значение в Ненецкий АО такимиже как в Архангельская область
df_terget <- df_rosstat[df_rosstat$Регион == 'Архангельская область', ]
df_rosstat <- df_rosstat %>% mutate(`Число абонентов` = ifelse(is.na(`Число абонентов`), df_terget$`Число абонентов`, `Число абонентов`))
# объединим все датафреймы
# преобразуем все слова названия регионов в нижний регистр
df_sberIndex$Регион <- tolower(df_sberIndex$Регион)
df_domclick$Регион <- tolower(df_domclick$Регион)
df_rosstat$Регион <- tolower(df_rosstat$Регион)
df_d_s <- full_join(df_sberIndex, df_domclick, by = c('Регион', 'Год', 'Месяц'))
df_total <- full_join(df_rosstat, df_d_s, by = c('Регион', 'Год', 'Месяц'))
View(df_total)
library(openxlsx)
?write.xlsx
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data/')
write.xlsx(df_total, 'total.xlsx')
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data')
library(tidyverse)
library(readxl)
df <- read_excel('total.xlsx')
View(df)
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data')
library(tidyverse)
library(readxl)
df <- read_excel('total.xlsx')
df_for_hist <- df %>% group_by(Месяц) %>% summarise(Индекс.БП = round(mean(Индекс.БП), 1),
Индекс.ПА = round(mean(Индекс.ПА), 1),
Количество.ВТ = round(mean(Количество.ВТ), 1))
df_for_hist$Месяц <- factor(df_for_hist$Месяц, levels = c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь'))
ggplot(data = df_for_hist, aes(x = Месяц, y = Индекс.БП)) + geom_col() + ylim(0, 100)
ggplot(data = df_for_hist, aes(x = Месяц, y = Индекс.ПА)) + geom_col()
ggplot(data = df_for_hist, aes(x = Месяц, y = Количество.ВТ)) + geom_col()
BP <- ggplot(data = df, aes(y = Индекс.БП)) + geom_boxplot() + facet_wrap(~Месяц)
str(BP)
BP$layers$geom$extra_params
View(df)
extra <- function(data) {
iqr <- IQR(data)
q1 <- quantile(data, 0.25)
q3 <- quantile(data, 0.75)
lower_b <- q1 - 1.5 * iqr
upper_b <- q3 + 1.5 * iqr
return(c(lower_b, upper_b))
}
test_pa <- extra(df$Индекс.ПА)
df_out_index_pa <- df[df$Индекс.ПА < test_pa[1] | df$Индекс.ПА > test_pa[2], ]
test_bp <- extra(df$Индекс.БП)
df_out_index_bp <- df[df$Индекс.БП < test_bp[1] | df$Индекс.БП > test_bp[2], ]
test_vt <- extra(df$Количество.ВТ)
df_out_count_vt <- df[df$Количество.ВТ < test_vt[1] | df$Количество.ВТ > test_vt[2], ]
View(df_out_index_bp)
View(df_out_index_pa)
View(df_out_index_pa)
View(df_out_count_vt)
View(df_out_count_vt)
?top
?top_n
top_n(df$Индекс.ПА, 30)
top_n(df, 30)
test <- top_n(df, 30)
View(test)
?top_frac
?top_frac
df %>% top_n(Индекс.ПА, 30)
df %>% top_n(Индекс.ПА, 30)
df %>% df$Индекс.ПА %>% top_n(30)
df %>% Индекс.ПА %>% top_n(30)
df %>% top_n(30)
