NA)
lib_int <- lib_int[lib_int$Name %in% c('FIND', 'REQUEST', 'INTERACT', 'OTHER'), ]
lib_serv[nrow(lib_serv) + 1, ] <-
c(max(lib_serv$Element.ID) + 1,
median(lib_serv$Tag.name),
'OTHER',
sum(lib_serv$No..clicks) - sum(lib_serv$No..clicks[lib_serv$Name %in% c('FIND', 'REQUEST', 'SERVICES')]),
median(lib_serv$Visible.),
NA)
lib_serv <- lib_serv[lib_serv$Name %in% c('FIND', 'REQUEST', 'SERVICES', 'OTHER'), ]
lib_int <- lib_int %>%
as.integer(No..clicks) %>%
lapply(No..clicks, proc_func_int)
library(tidyverse)
lib_int <- lib_int %>%
as.integer(No..clicks) %>%
lapply(No..clicks, proc_func_int)
lib_int$No..clicks <- as.integer(lib_int$No..clicks)
lib_int$No..clicks <- lapply(lib_int$No..clicks, proc_func_int)
lib_int$No..clicks <- round(lapply(lib_int$No..clicks, proc_func_int), 2)
lib_int <- read.csv('library-ab-interact.csv')
lib_int[nrow(lib_int) + 1, ] <-
c(max(lib_int$Element.ID) + 1,
median(lib_int$Tag.name),
'OTHER',
sum(lib_int$No..clicks) - sum(lib_int$No..clicks[lib_int$Name %in% c('FIND', 'REQUEST', 'INTERACT')]),
median(lib_int$Visible.),
NA)
lib_int <- lib_int[lib_int$Name %in% c('FIND', 'REQUEST', 'INTERACT', 'OTHER'), ]
lib_int$No..clicks <- as.integer(lib_int$No..clicks)
lib_int$No..clicks <- round(lapply(lib_int$No..clicks, proc_func_int), 2)
lib_int$No..clicks <- round(lapply(lib_int$No..clicks, proc_func_int))
lib_int$No..clicks <- lapply(lib_int$No..clicks, proc_func_int)
lib_int$No..clicks <- round(lib_int$No..clicks, 2)
str(lib_int)
ggplot(data = lib_int, aes(x = factor(1), y = No..clicks, fill = Name)) +
geom_bar(stat = 'identity', width = 1, na.rm = TRUE) +
coord_polar('y')
ggplot(data = lib_int, aes(x = factor(1), y = No..clicks, fill = Name)) +
geom_bar(stat = 'identity', width = 1) +
coord_polar('y')
lib_int$No..clicks <- as.integer(lib_int$No..clicks)
ggplot(data = lib_int, aes(x = factor(1), y = No..clicks, fill = Name)) +
geom_bar(stat = 'identity', width = 1) +
coord_polar('y')
lib_serv$No..clicks <- as.integer(lib_serv$No..clicks)
lib_serv$No..clicks <- lapply(lib_serv$No..clicks, proc_func_serv)
lib_serv$No..clicks <- as.integer(lib_serv$No..clicks)
ggplot(data = lib_serv, aes(x = factor(1), y = No..clicks, fill = Name)) +
geom_bar(stat = 'identity', width = 1, na.rm = TRUE) +
coord_polar('y')
lib_int <- read.csv('library-ab-interact.csv')
lib_serv <- read.csv('library-ab-services.csv')
lib_int[nrow(lib_int) + 1, ] <-
c(max(lib_int$Element.ID) + 1,
median(lib_int$Tag.name),
'OTHER',
sum(lib_int$No..clicks) - sum(lib_int$No..clicks[lib_int$Name %in% c('FIND', 'REQUEST', 'INTERACT')]),
median(lib_int$Visible.),
NA)
lib_int <- lib_int[lib_int$Name %in% c('FIND', 'REQUEST', 'INTERACT', 'OTHER'), ]
lib_serv[nrow(lib_serv) + 1, ] <-
c(max(lib_serv$Element.ID) + 1,
median(lib_serv$Tag.name),
'OTHER',
sum(lib_serv$No..clicks) - sum(lib_serv$No..clicks[lib_serv$Name %in% c('FIND', 'REQUEST', 'SERVICES')]),
median(lib_serv$Visible.),
NA)
lib_serv <- lib_serv[lib_serv$Name %in% c('FIND', 'REQUEST', 'SERVICES', 'OTHER'), ]
# Для анализа применим z-тест для сравнения долей и проверим, что первая доля больше второй
prop.test(с(45, 42), c(1348, 3714), alternative = 'greater')
# Для анализа применим z-тест для сравнения долей и проверим, что первая доля больше второй
prop.test(c(45, 42), c(1348, 3714), alternative = 'greater')
cor.test(db$SEC, db$Forgiveness, method = "spearman")
db <- read_excel('DB.xlsx')
setwd('C:/Users/yadon/Skillbox/R/16. Поиск взаимосвязей в данных')
library(readxl)
db <- read_excel('DB.xlsx')
f_m_db <- db %>% group_by(Gender) %>% summarise(count = n(),
mean_age = round(mean(Age), 2),
sd_age = round(sd(Age), 2))
library(readxl)
library(tidyverse)
View(db)
f_m_db <- db %>% group_by(Gender) %>% summarise(count = n(),
mean_age = round(mean(Age), 2),
sd_age = round(sd(Age), 2))
cor.test(db$SEC, db$Forgiveness, method = "spearman")
setwd('C:/Users/yadon/Skillbox/R/16. Поиск взаимосвязей в данных')
library(readxl)
library(tidyverse)
db <- read_excel('DB.xlsx')
db <- read_excel('DB.xlsx')
f_m_db <- db %>% group_by(Gender) %>% summarise(count = n(),
mean_age = round(mean(Age), 2),
sd_age = round(sd(Age), 2))
cor.test(db$SEC, db$Forgiveness, method = "spearman")
ggplot(data = db, aes(x = SEC, y = Curiosity, group = Gender, fill = Gender, colour = Gender)) +
geom_point()
View(db)
ggplot(data = db, aes(x = SEC, y = Forgiveness, group = Gender, fill = Gender, colour = Gender)) +
geom_point()
cor.test(db$SEC, db$Forgiveness, method = "spearman")
cor.test(db$SEC, db$Forgiveness)
db$Forgiveness <- as.factor(db$Forgiveness)
str(db)
ggplot(data = db, aes(x = SEC, y = Forgiveness, group = Gender, fill = Gender, colour = Gender)) +
geom_point()
cor.test(db$SEC, db$Forgiveness, method = "spearman")
cor.test(db$SEC, db$Forgiveness, method = "spearman")
cor.test(db$SEC, db$Forgiveness)
db <- read_excel('DB.xlsx')
ggplot(data = db, aes(x = SEC, y = Forgiveness, group = Gender, fill = Gender, colour = Gender)) +
geom_point()
cor.test(db$SEC, db$Forgiveness)
cor.test(db$SEC, db$Forgiveness, method = "spearman")
cor.test(db$SEC, db$Curiosity, method = "spearman")
?cor.test
cor.test(db$SEC, db$Curiosity, method = "spearman", conf.level = 0.01)
ggplot(data = db, aes(x = SEC, y = Curiosity, group = Gender, fill = Gender, colour = Gender)) +
geom_point()
cor.test(db$DASS_21, db$Spirituality)
cor.test(db$DASS_21, db$Spirituality, method = 'spearman')
cor.test(db$DASS_21, db$Spirituality, method = 'spearman')
my_db <- db %>% filter(Age, GHQ_12, DASS_21, SEC)
my_db <- filter(Age, GHQ_12, DASS_21, SEC)
my_db <- db %>% select(Age, GHQ_12, DASS_21, SEC)
View(my_db)
library(psych)
corr.test(my_db)
library(corrplot)
M_db <- corr.test(my_db)
View(M_db)
summary(M_db)
?corr.test
M_db <- corr.test(my_db, alpha = 0.01)
corrplot(M_db)
corrplot(M_db$p)
corrplot(M_db$p, method = 'number')
?corrplo
?corrplot
corrplot(M_db$p, method = 'pie')
corrplot(M_db$p, method = 'pie', col = COL2('PiYG'))
corrplot(M_db$p, method = 'pie', col = COL2(n=200))
corrplot(M_db$p, method = 'pie', col = COL2(n=20))
corrplot(M_db$p, method = 'pie', col = 'black')
corrplot(M_db$p, method = 'number', col = 'black')
corrplot(M_db$p, method = 'number', col = 'blue')
corrplot(M_db$r, method = 'number', col = 'blue')
cor.test(my_db, conf.level = 0.01)
cor.test(my_db, conf.level = 0.01, , method = 'spearman')
?corr.test
my_db <- db %>% select(Age, GHQ_12, DASS_21, SEC)
M_db <- corr.test(my_db, alpha = 0.01)
corrplot(M_db$r, method = 'number', col = 'blue')
mod <- lm(data = db, DASS_21 ~ Age)
View(mod)
summary(mod)
# визуализируем коэф. корреляции
corrplot(M_db$r, method = 'number', col = 'blue')
library(psych)
library(corrplot)
my_db <- db %>% select(Age, GHQ_12, DASS_21, SEC)
library(readxl)
db <- read_excel('DB.xlsx')
# визуализируем коэф. корреляции
corrplot(M_db$r, method = 'number', col = 'blue')
1 * (-0.17) + 21.45
2 * (-0.17) + 21.45
27 * (-0.17) + 21.45
40 * (-0.17) + 21.45
27 * (-0.17) + 21.45
table(db$DASS_21)
str(db$DASS_21)
summary(db$DASS_21)
hist(db$DASS_21)
summary(db$DASS_21)
db$resd <- mod$residuals
View(db)
library(tidyverse)
# построим график рассеивания
ggplot(data = db, aes(x = Age, y = resid)) +
geom_point()
View(db)
# построим график рассеивания
ggplot(data = db, aes(x = Age, y = resd)) +
geom_point()
db <- read_excel('DB.xlsx')
# добавим новый столбец с остатками
db$resid <- mod$residuals
# построим график рассеивания
ggplot(data = db, aes(x = Age, y = resid)) +
geom_point()
table(db$Gender, db$Work)
# кол. частот достаточно, что бы пременит тест хиквадрат
chisq.test(db$Gender, db$Work)
library(tidyverse)
beer <- read.csv('Consumo_cerveja.csv')
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
summary(mod_beer)
beer$month <- strsplit(beer$Data, '-')[2]
beer$month <- strsplit(beer$Data, '-')
View(beer)
beer$month <- strsplit(beer$Data, '-')[2]
beer$month <- strsplit(beer$Data, '-')[2][1]
beer$month <- strsplit(beer$Data, '-') %>% beer$month
beer$month <- strsplit(beer$Data, '-') %>% beer$month[2]
beer <- read.csv('Consumo_cerveja.csv')
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
beer$Month <- (strsplit(beer$Data, '-'))[2]
beer$Month <- (strsplit(beer$Data, '-'))[[1]][2]
beer <- read.csv('Consumo_cerveja.csv')
beer$Month <- beer %>% (strsplit(Data, '-'))[[1]][2]
beer$Month <- beer %>% (strsplit(beer$Data, '-'))[[1]][2]
beer$Month <- beer %>% unlist(strsplit(beer$Data, '-'))[2]
beer$Month <- beer %>% unlist(strsplit(beer$Data, '-'))
beer <- beer[-complete.cases(beer), ]
beer <- beer[, -complete.cases(beer)]
beer <- beer[, complete.cases(beer)]
beer <- beer[complete.cases(beer), ]
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
summary(mod_beer)
beer$Month <- unlist(strsplit(beer$Data, '-'))[2]
beer$Month <- strsplit(beer$Data, '-')[[1]][2]
beer <- read.csv('Consumo_cerveja.csv')
beer <- beer[complete.cases(beer), ]
beer$Month <- strsplit(beer$Data, '-')[[1]][2]
beer <- read.csv('Consumo_cerveja.csv')
beer <- beer[complete.cases(beer), ]
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
beer %>% mutate(Month = strsplit(Data, '-')[[1]][2])
beer %>% mutate(Month = strsplit(Data, '-'))
beer %>% mutate(Month = strsplit(Data, '-'))
beer %>% mutate(Month = strsplit(Data, '-')[1])
beer %>% mutate(Month = strsplit(Data, '-')[[1]])
beer <- beer %>% mutate(Month = strsplit(Data, '-'))
beer <- beer %>% mutate(Month = unlist(strsplit(Data, '-')))
beer <- beer %>% mutate(Month = unlist(strsplit(Data, '-')[[1]]))
beer <- beer %>% mutate(Month = strsplit(Data, '-')[1][2])
beer <- beer %>% mutate(Month = strsplit(Data, '-')[2][2])
beer <- beer %>% mutate(Month = strsplit(Data, '-')[1])
beer <- beer %>% mutate(Month = strsplit(Data, '-'))
beer <- beer %>% mutate(Month = strsplit(Data, '-')) %>% Month[2]
beer <- beer %>% mutate(Month = strsplit(Data, '-')) %>% beer$Month[2]
beer <- beer %>% mutate(Month = strsplit(Data, '-')) %>% beer$Month
str(beer)
beer <- beer %>% mutate(Month = Month[2])
beer <- beer %>% mutate(Month = strsplit(Data, '-'))
beer$Month <- beer$Month[2]
beer <- read.csv('Consumo_cerveja.csv')
beer <- beer[complete.cases(beer), ]
beer$Temperatura.Media..C. <- gsub(',', '.', beer$Temperatura.Media..C.) %>% as.numeric(beer$Temperatura.Media..C.)
beer$Precipitacao..mm. <- gsub(',', '.', beer$Precipitacao..mm.) %>% as.numeric(beer$Precipitacao..mm.)
Month <- strsplit(beer$Data, '-')
View(Month)
Month[2]
Month[2][2]
Month[[2]][2]
Month <- strsplit(beer$Data, '-')[[2]][2]
Month_list <- strsplit(beer$Data, '-')
for (i in Month_list) {
Month <- c(Month, i[2])
}
beer$Month <- Month
Month_list <- strsplit(beer$Data, '-')
Month <- c()
for (i in Month_list) {
Month <- c(Month, i[2])
}
beer$Month <- Month
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer)
mod_beer <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana)
summary(mod_beer)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
library(tidyverse)
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, Month)
View(small_beer)
library(psych)
corr.test(small_beer)
cor(small_beer)
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, as.integer(Month))
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, Month)
mod_beer_1 <- as.factor(beer$Month)
beer$Month <- as.factor(beer$Month)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
beer$Month <- as.integer(beer$Month)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
beer$Month <- as.factor(beer$Month)
mod_beer_1 <- lm(data = beer, Consumo.de.cerveja..litros. ~ Temperatura.Media..C. +
Precipitacao..mm. + Final.de.Semana + Month)
summary(mod_beer_1)
small_beer <- beer %>% select(Temperatura.Media..C., Precipitacao..mm., Final.de.Semana, Month)
cor(small_beer)
small_beer$Month <- as.integer(small_beer$Month)
View(small_beer)
cor(small_beer)
corr.test(small_beer)
cor(small_beer)
small_beer$resid <- mod_beer_1$residuals
small_beer$fitt <- mod_beer_1$fitted.values
ggplot(data = small_beer, aes(x = resid, y = fitt)) +
geom_point() +
geom_line(y = 0, color = 'red')
ggplot(data = small_beer, aes(x = resid, y = fitt)) +
geom_point() +
geom_line(yintercept = 0, color = 'red')
ggplot(data = small_beer, aes(x = resid, y = fitt)) +
geom_point() +
geom_line(y = 0, color = 'red')
ggplot(data = small_beer, aes(x = fitt, y = resid)) +
geom_point() +
geom_line(y = 0, color = 'red')
library(lmtest)
library(sandwich)
coeftest(mod_beer_1, vcov = vcovHC(mod2, type = "HC0"))
coeftest(mod_beer_1, vcov = vcovHC(mod_beer_1, type = "HC0"))
plot(mod_beer_1, 5)
diabet <- read.csv('diabetes.csv')
View(diabet)
summary(diabet)
boxplot(diabet)
box_plot <- boxplot(diabet)
box_plot$out
box_plot <- boxplot(diabet)
box_plot <- boxplot(diabet$BMI)
box_plot$out
box_plot$stats
diabet$BMI
BMI <- diabet$BMI
boxplot(BMI)
boxplot(diabet$BMI)
boxplot(diabet)
summary(diabet)
diabet <- diabet %>% filter(BloodPressure != 0, BMI != 0)
library(tidyverse)
diabet <- diabet %>% filter(BloodPressure != 0, BMI != 0)
summary(diabet)
table(diabet$Outcome)
mod_d <- glm(data = diabet, Outcome ~ Glucose + BloodPressure + Insulin + BMI + AGE, family = "binomial")
mod_d <- glm(data = diabet, Outcome ~ Glucose + BloodPressure + Insulin + BMI + Age, family = "binomial")
summary(mod_d)
exp(coef(mod_d))
summary(mod_d)
exp(coef(mod_d))
mod_d$fitted.values
diabet <- diabet %>% mutate(fitt = ifelse(mod_d$fitted.values > 0.5, 1, 0))
TN <- diabet[diabet$Outcome == 0 & diabet$fitt == 0, ]
View(TN)
TN <- nrow(diabet[diabet$Outcome == 0 & diabet$fitt == 0, ])
TP <- nrow(diabet[diabet$Outcome == 1 & diabet$fitt == 1, ])
FN <- nrow(diabet[diabet$Outcome == 1 & diabet$fitt == 0, ])
FP <- nrow(diabet[diabet$Outcome == 0 & diabet$fitt == 1, ])
sensitivity <- TP / (TP + FN)
specificity <- TN / (TN + FP)
accuracy <- (TP + TN) / nrow(diabet)
View(diamonds)
library(tidyverse)
View(diamonds)
?barplot
shiny::runApp('C:/Users/yadon/Skillbox/R/19. Аналитические панели в R. Фреймворк Shiny/practice2')
runApp('C:/Users/yadon/Skillbox/R/19. Аналитические панели в R. Фреймворк Shiny/practice2')
runApp('C:/Users/yadon/Skillbox/R/19. Аналитические панели в R. Фреймворк Shiny/practice2')
index <- read.csv('Индекс потребительской активности.csv', sep = ';',encoding='utf-8')
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data/СберИндекс')
index <- read.csv('Индекс потребительской активности.csv', sep = ';',encoding='utf-8')
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
cash_of <- read.csv('Доля безналичных плтежей в торговом обороте.csv', sep = ';')
cash_of <- read.csv(`Доля безналичных плтежей в торговом обороте.csv`, sep = ';')
cash_of <- read.csv('Доля безналичных плтежей в торговом обороте.csv', sep = ';')
cash_of <- read.csv('cash_of.csv')
cash_of <- read.csv('cash_of.csv')
cash_of <- read.csv('cash_of.csv', sep = ';')
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data/СберИндекс')
cash_of <- read.csv('cash_of.csv', sep = ';')
setwd('C:/Users/yadon/Skillbox/R/Для финальной работы/Данные для финальной работы/Данные/СберИндекс')
cash_of <- read.csv('cash_of.csv', sep = ';')
index <- read.csv('index.csv', sep = ';')
setwd('C:/Users/yadon/Skillbox/R/TrustUs_R/data/СберИндекс')
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
index <- read.csv('Индекс потребительской активности.csv', sep = ';',encoding='utf-8')
turist <- read.csv('Количество внутренних туристов.csv', sep = ';')
??fileEncoding
??fileEncoding =
??fileEncoding
??fileEncoding
month_num <- unlist(strsplit(turist$Дата))
month_num <- unlist(strsplit(turist$Дата, '-'))
month_num[1]
month_num <- as.integer(unlist(strsplit(turist$Дата, '-')))
month_num <- as.integer(unlist(strsplit(turist$Дата, '-'))[1])
month_list <- strsplit(turist$Дата, '-')
month_num <- c()
for (i in month_list) {
month_num <- c(month_num, as.integer(i[1]))
}
year_num <- c()
for (i in year_list) {
year_num <- c(year_num, as.integer(i[1]))
}
year_list <- strsplit(turist$Дата, '-')
for (i in year_list) {
year_num <- c(year_num, as.integer(i[1]))
}
cash_of$year <- year_num
View(cash_of)
cash_of$Год <- year_num
complete.cases(cash_of$Дата)
sum(complete.cases(cash_of$Дата))
View(year_list)
year_list <- strsplit(cash_of$Дата, '-')
year_list <- strsplit(cash_of$Дата, '-')
for (i in year_list) {
year_num <- c(year_num, as.integer(i[1]))
}
year_num <- c()
for (i in year_list) {
year_num <- c(year_num, as.integer(i[1]))
}
cash_of$Год <- year_num
sum(complete.cases(cash_of$Дата))
year <- function(data) {
year_num <- c()
for (i in year_list) {
year_num <- c(year_num, as.integer(i[1]))
}
return(year_num)
}
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
cash_of$Год <- year(strsplit(cash_of$Дата, '-'))
turist$Год <- year(strsplit(turist$Дата, '-'))
year <- function(data) {
year_num <- c()
for (i in data) {
year_num <- c(year_num, as.integer(i[1]))
}
return(year_num)
}
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
turist <- read.csv('Количество внутренних туристов.csv', sep = ';')
cash_of$Год <- year(strsplit(cash_of$Дата, '-'))
turist$Год <- year(strsplit(turist$Дата, '-'))
library(tidyverse)
total <- year_num %>% filter(Год %in% year_num)
cash_of <- cash_of[, cash_of$Год == 2020]
cash_of <- cash_of[cash_of$Год == 2020, ]
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
turist <- read.csv('Количество внутренних туристов.csv', sep = ';')
year <- function(data, year_month) {
num <- c()
for (i in data) {
num <- c(num, as.integer(i[year_month]))
}
return(num)
}
cash_of$Год <- year(strsplit(cash_of$Дата, '-'), 1)
turist$Год <- year(strsplit(turist$Дата, '-'), 1)
cash_of$Месяц <- year(strsplit(cash_of$Дата, '-'), 2)
turist$Месяц <- year(strsplit(turist$Дата, '-'), 2)
cash_of <- cash_of[cash_of$Год == 2020, ]
date_in_data <- function(data, year_month) {
num <- c()
for (i in data) {
num <- c(num, as.integer(i[year_month]))
}
return(num)
}
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
month_str <- c()
month_data <- function(data) {
month_v <- c('январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь')
month_str <- c()
for (i in data) {
month_str <- c(month_str, month_v[as.integer(i)])
}
return(month_str)
}
cash_of$Месяц <- month_data(cash_of$Дата)
test <- month_data(cash_of$Дата)
warnings()
test <- month_data(cash_of$Месяц)
cash_of$Месяц_str <- month_data(cash_of$Месяц)
cash_of$Месяц <- date_in_data(strsplit(cash_of$Дата, '-'), 2)
cash_of$Месяц_str <- month_data(cash_of$Месяц)
cash_of$Месяц <- month_data(cash_of$Месяц)
cash_of <- read.csv('Доля безналичных платежей в торговом обороте.csv', sep = ';')
cash_of$Год <- date_in_data(strsplit(cash_of$Дата, '-'), 1)
cash_of$Месяц <- date_in_data(strsplit(cash_of$Дата, '-'), 2)
cash_of$Месяц <- month_data(cash_of$Месяц)
cash_of <- cash_of[cash_of$Год == 2020, ]
